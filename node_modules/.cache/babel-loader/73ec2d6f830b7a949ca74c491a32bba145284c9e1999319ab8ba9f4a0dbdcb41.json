{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\components\\\\Portal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport Captcha from './captcha';\n\n// Constants for normalization and threshold adjustments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\n\nconst Portal = () => {\n  _s();\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    keyHoldTime: 0,\n    errorRate: 0,\n    sessionDuration: 0,\n    pageNavigationPattern: [],\n    averageDwellTime: 0,\n    scrollBehavior: 0\n  });\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\n  const [keyHoldDurations, setKeyHoldDurations] = useState([]);\n  const keyDownTimes = {};\n  const [navigationEvents, setNavigationEvents] = useState([]);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const sessionStart = performance.now();\n  let lastInteractionTime = sessionStart;\n  let lastCursorPosition = {\n    x: null,\n    y: null,\n    time: null\n  };\n  let lastKeyPressTime = null;\n  let lastScrollPosition = window.scrollY;\n  let lastFocusTime = null;\n  useEffect(() => {\n    let mouseMoveEvents = [];\n    const trackMouseMovement = event => {\n      const currentTime = performance.now();\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\n            acceleration = MAX_HUMAN_ACCELERATION;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Compute moving average of speed and acceleration\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n\n          // Calculate straight-line distance between last position and current position\n          const straightLineDistance = Math.sqrt((event.clientX - lastCursorPosition.x) ** 2 + (event.clientY - lastCursorPosition.y) ** 2);\n\n          // Calculate path deviation as the difference between actual distance and straight-line distance\n          const deviation = Math.abs(distance - straightLineDistance);\n\n          // Update jitter\n          const movement = Math.sqrt(dx * dx + dy * dy);\n          const isJitter = movement < 2; // Threshold can be adjusted\n\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: avgSpeed,\n            cursorAcceleration: avgAcceleration,\n            pathDeviation: prevData.pathDeviation > 0 ? (prevData.pathDeviation + deviation) / 2 : deviation,\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter\n          }));\n        }\n      }\n      lastCursorPosition = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTime = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTime = performance.now();\n    };\n    const handleKeyDown = event => {\n      if (!keyDownTimes[event.key]) {\n        keyDownTimes[event.key] = performance.now();\n      }\n    };\n    const handleKeyUp = event => {\n      if (keyDownTimes[event.key]) {\n        const holdDuration = performance.now() - keyDownTimes[event.key];\n        setKeyHoldDurations(prevDurations => [...prevDurations, holdDuration]);\n        delete keyDownTimes[event.key];\n      }\n    };\n    const handleKeyPress = event => {\n      const currentTime = performance.now();\n      if (lastKeyPressTime) {\n        const duration = currentTime - lastKeyPressTime;\n        setKeystrokeDurations(prevDurations => [...prevDurations, duration]);\n        setKeyTransitionTimes(prevTimes => [...prevTimes, duration]);\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n          setErrorCount(prev => prev + 1); // Count as an error\n        }\n      }\n      lastKeyPressTime = currentTime;\n      lastInteractionTime = currentTime;\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      const delta = Math.abs(newScrollPosition - lastScrollPosition);\n      if (delta > 0) {\n        setScrollDistance(prev => prev + delta);\n        lastInteractionTime = performance.now();\n      }\n      lastScrollPosition = newScrollPosition;\n    };\n    const handleFocus = () => {\n      lastFocusTime = performance.now();\n    };\n    const handleBlur = () => {\n      if (lastFocusTime) {\n        const dwellTime = performance.now() - lastFocusTime;\n        setDwellTimes(prevTimes => [...prevTimes, dwellTime]);\n        lastFocusTime = null;\n      }\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTime) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n      }\n      lastInteractionTime = currentTime;\n    };\n\n    // Since we're removing botScore, this function can be left empty or repurposed\n    const analyzeInteractionData = () => {\n      // You can use this function for other analyses if needed\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    document.addEventListener('keypress', handleKeyPress);\n    window.addEventListener('scroll', handleScroll);\n\n    // Wait for the DOM to load to add event listeners to the input\n    const aadhaarInput = document.getElementById('aadhaarNumber');\n    if (aadhaarInput) {\n      aadhaarInput.addEventListener('focus', handleFocus);\n      aadhaarInput.addEventListener('blur', handleBlur);\n    }\n    const idleInterval = setInterval(calculateIdleTime, 5000);\n    const analysisInterval = setInterval(analyzeInteractionData, 10000);\n    const handleBeforeUnload = () => {\n      const currentTime = performance.now();\n      const sessionDuration = (currentTime - sessionStart) / 1000; // in seconds\n\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\n      const averageKeyPressDuration = keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\n      const typingSpeed = sessionDuration > 0 ? (keystrokeDurations.length / (sessionDuration / 60)).toFixed(2) : 0; // chars per minute\n\n      const averageKeyTransitionTime = keyTransitionTimes.length > 0 ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length : 0;\n      const averageKeyHoldTime = keyHoldDurations.length > 0 ? keyHoldDurations.reduce((sum, time) => sum + time, 0) / keyHoldDurations.length : 0;\n      const averageDwellTime = dwellTimes.length > 0 ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length : 0;\n      const formattedData = {\n        avgCursorSpeed: interactionData.avgCursorSpeed ? interactionData.avgCursorSpeed.toFixed(2) : 0,\n        cursorAcceleration: interactionData.cursorAcceleration ? interactionData.cursorAcceleration.toFixed(2) : 0,\n        pathDeviation: interactionData.pathDeviation ? interactionData.pathDeviation.toFixed(2) : 0,\n        idleTime: idleTime.toFixed(2),\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\n        clickPattern: clickCount,\n        typingSpeed,\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\n        keyTransitionTime: averageKeyTransitionTime.toFixed(2),\n        keyHoldTime: averageKeyHoldTime.toFixed(2),\n        errorRate: keystrokeDurations.length > 0 ? (errorCount / keystrokeDurations.length * 100).toFixed(2) : 0,\n        sessionDuration: sessionDuration.toFixed(2),\n        pageNavigationPattern: JSON.stringify(navigationEvents),\n        averageDwellTime: averageDwellTime.toFixed(2),\n        scrollBehavior: scrollDistance.toFixed(2)\n        // Removed botScore from the CSV data\n      };\n      downloadCSV(formattedData);\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n      document.removeEventListener('keypress', handleKeyPress);\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      if (aadhaarInput) {\n        aadhaarInput.removeEventListener('focus', handleFocus);\n        aadhaarInput.removeEventListener('blur', handleBlur);\n      }\n      clearInterval(idleInterval);\n      clearInterval(analysisInterval);\n    };\n  }, [clickCount, keystrokeDurations, keyTransitionTimes, keyHoldDurations, scrollDistance, idleTime, sessionStart, interactionData, errorCount, dwellTimes, navigationEvents\n  // botScore is removed\n  ]);\n  const downloadCSV = data => {\n    const headers = Object.keys(data).join(',');\n    const values = Object.values(data).join(',');\n    const csvContent = `${headers}\\n${values}`;\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'interaction_data.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const handleAadhaarChange = e => {\n    const value = e.target.value.replace(/\\s+/g, '');\n    if (/^\\d{0,12}$/.test(value)) {\n      setAadhaarNumber(value);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\n    }\n  };\n  const handleLogin = () => {\n    if (aadhaarNumber.length === 12) {\n      alert('Login successful!');\n    } else {\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aadhaarNumber\",\n        children: \"Aadhaar Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aadhaarNumber\",\n        value: aadhaarNumber,\n        onChange: handleAadhaarChange,\n        placeholder: \"Enter your 12-digit Aadhaar number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), showCaptcha && /*#__PURE__*/_jsxDEV(Captcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginButton\",\n      onClick: handleLogin,\n      disabled: aadhaarNumber.length !== 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"NLVDMUfWgqxz098TL1QUPRu467s=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","Captcha","jsxDEV","_jsxDEV","AVERAGE_DPI","DPI_NORMALIZATION_FACTOR","MAX_HUMAN_ACCELERATION","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","keyHoldTime","errorRate","sessionDuration","pageNavigationPattern","averageDwellTime","scrollBehavior","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","keyTransitionTimes","setKeyTransitionTimes","keyHoldDurations","setKeyHoldDurations","keyDownTimes","navigationEvents","setNavigationEvents","showCaptcha","setShowCaptcha","sessionStart","performance","now","lastInteractionTime","lastCursorPosition","x","y","time","lastKeyPressTime","lastScrollPosition","window","scrollY","lastFocusTime","mouseMoveEvents","trackMouseMovement","event","currentTime","dx","clientX","dy","clientY","distance","Math","sqrt","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","reduce","sum","e","length","avgAcceleration","straightLineDistance","deviation","abs","movement","isJitter","prevData","handleClick","prev","handleKeyDown","key","handleKeyUp","holdDuration","prevDurations","handleKeyPress","duration","prevTimes","handleScroll","newScrollPosition","delta","handleFocus","handleBlur","dwellTime","calculateIdleTime","timeSinceLastInteraction","analyzeInteractionData","document","addEventListener","aadhaarInput","getElementById","idleInterval","setInterval","analysisInterval","handleBeforeUnload","totalKeyPressDuration","dur","averageKeyPressDuration","toFixed","averageKeyTransitionTime","averageKeyHoldTime","formattedData","JSON","stringify","downloadCSV","removeEventListener","clearInterval","data","headers","Object","keys","join","values","csvContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleAadhaarChange","value","target","replace","test","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/components/Portal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css';\r\nimport Captcha from './captcha';\r\n\r\n// Constants for normalization and threshold adjustments\r\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\r\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\r\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\r\n\r\nconst Portal = () => {\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    keyHoldTime: 0,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    pageNavigationPattern: [],\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\r\n  const [keyHoldDurations, setKeyHoldDurations] = useState([]);\r\n  const keyDownTimes = {};\r\n  const [navigationEvents, setNavigationEvents] = useState([]);\r\n  const [showCaptcha, setShowCaptcha] = useState(false);\r\n  const sessionStart = performance.now();\r\n  let lastInteractionTime = sessionStart;\r\n  let lastCursorPosition = { x: null, y: null, time: null };\r\n  let lastKeyPressTime = null;\r\n  let lastScrollPosition = window.scrollY;\r\n  let lastFocusTime = null;\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = performance.now();\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\r\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\r\n            acceleration = MAX_HUMAN_ACCELERATION;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Compute moving average of speed and acceleration\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          // Calculate straight-line distance between last position and current position\r\n          const straightLineDistance = Math.sqrt(\r\n            (event.clientX - lastCursorPosition.x) ** 2 +\r\n            (event.clientY - lastCursorPosition.y) ** 2\r\n          );\r\n\r\n          // Calculate path deviation as the difference between actual distance and straight-line distance\r\n          const deviation = Math.abs(distance - straightLineDistance);\r\n\r\n          // Update jitter\r\n          const movement = Math.sqrt(dx * dx + dy * dy);\r\n          const isJitter = movement < 2; // Threshold can be adjusted\r\n\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: avgSpeed,\r\n            cursorAcceleration: avgAcceleration,\r\n            pathDeviation:\r\n              prevData.pathDeviation > 0\r\n                ? (prevData.pathDeviation + deviation) / 2\r\n                : deviation,\r\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPosition = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTime = performance.now();\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n      if (!keyDownTimes[event.key]) {\r\n        keyDownTimes[event.key] = performance.now();\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event) => {\r\n      if (keyDownTimes[event.key]) {\r\n        const holdDuration = performance.now() - keyDownTimes[event.key];\r\n        setKeyHoldDurations((prevDurations) => [...prevDurations, holdDuration]);\r\n        delete keyDownTimes[event.key];\r\n      }\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n      const currentTime = performance.now();\r\n      if (lastKeyPressTime) {\r\n        const duration = currentTime - lastKeyPressTime;\r\n        setKeystrokeDurations((prevDurations) => [...prevDurations, duration]);\r\n        setKeyTransitionTimes((prevTimes) => [...prevTimes, duration]);\r\n\r\n        if (event.key === 'Backspace' || event.key === 'Delete') {\r\n          setErrorCount((prev) => prev + 1); // Count as an error\r\n        }\r\n      }\r\n      lastKeyPressTime = currentTime;\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      const delta = Math.abs(newScrollPosition - lastScrollPosition);\r\n      if (delta > 0) {\r\n        setScrollDistance((prev) => prev + delta);\r\n        lastInteractionTime = performance.now();\r\n      }\r\n      lastScrollPosition = newScrollPosition;\r\n    };\r\n\r\n    const handleFocus = () => {\r\n      lastFocusTime = performance.now();\r\n    };\r\n\r\n    const handleBlur = () => {\r\n      if (lastFocusTime) {\r\n        const dwellTime = performance.now() - lastFocusTime;\r\n        setDwellTimes((prevTimes) => [...prevTimes, dwellTime]);\r\n        lastFocusTime = null;\r\n      }\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTime) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n      }\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    // Since we're removing botScore, this function can be left empty or repurposed\r\n    const analyzeInteractionData = () => {\r\n      // You can use this function for other analyses if needed\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    document.addEventListener('keyup', handleKeyUp);\r\n    document.addEventListener('keypress', handleKeyPress);\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Wait for the DOM to load to add event listeners to the input\r\n    const aadhaarInput = document.getElementById('aadhaarNumber');\r\n    if (aadhaarInput) {\r\n      aadhaarInput.addEventListener('focus', handleFocus);\r\n      aadhaarInput.addEventListener('blur', handleBlur);\r\n    }\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 5000);\r\n    const analysisInterval = setInterval(analyzeInteractionData, 10000);\r\n\r\n    const handleBeforeUnload = () => {\r\n      const currentTime = performance.now();\r\n      const sessionDuration = (currentTime - sessionStart) / 1000; // in seconds\r\n\r\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\r\n      const averageKeyPressDuration =\r\n        keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\r\n\r\n      const typingSpeed =\r\n        sessionDuration > 0\r\n          ? ((keystrokeDurations.length / (sessionDuration / 60)).toFixed(2))\r\n          : 0; // chars per minute\r\n\r\n      const averageKeyTransitionTime =\r\n        keyTransitionTimes.length > 0\r\n          ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length\r\n          : 0;\r\n\r\n      const averageKeyHoldTime =\r\n        keyHoldDurations.length > 0\r\n          ? keyHoldDurations.reduce((sum, time) => sum + time, 0) / keyHoldDurations.length\r\n          : 0;\r\n\r\n      const averageDwellTime =\r\n        dwellTimes.length > 0\r\n          ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length\r\n          : 0;\r\n\r\n      const formattedData = {\r\n        avgCursorSpeed: interactionData.avgCursorSpeed\r\n          ? interactionData.avgCursorSpeed.toFixed(2)\r\n          : 0,\r\n        cursorAcceleration: interactionData.cursorAcceleration\r\n          ? interactionData.cursorAcceleration.toFixed(2)\r\n          : 0,\r\n        pathDeviation: interactionData.pathDeviation\r\n          ? interactionData.pathDeviation.toFixed(2)\r\n          : 0,\r\n        idleTime: idleTime.toFixed(2),\r\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\r\n        clickPattern: clickCount,\r\n        typingSpeed,\r\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\r\n        keyTransitionTime: averageKeyTransitionTime.toFixed(2),\r\n        keyHoldTime: averageKeyHoldTime.toFixed(2),\r\n        errorRate:\r\n          keystrokeDurations.length > 0\r\n            ? ((errorCount / keystrokeDurations.length) * 100).toFixed(2)\r\n            : 0,\r\n        sessionDuration: sessionDuration.toFixed(2),\r\n        pageNavigationPattern: JSON.stringify(navigationEvents),\r\n        averageDwellTime: averageDwellTime.toFixed(2),\r\n        scrollBehavior: scrollDistance.toFixed(2),\r\n        // Removed botScore from the CSV data\r\n      };\r\n\r\n      downloadCSV(formattedData);\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n      document.removeEventListener('keyup', handleKeyUp);\r\n      document.removeEventListener('keypress', handleKeyPress);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      if (aadhaarInput) {\r\n        aadhaarInput.removeEventListener('focus', handleFocus);\r\n        aadhaarInput.removeEventListener('blur', handleBlur);\r\n      }\r\n      clearInterval(idleInterval);\r\n      clearInterval(analysisInterval);\r\n    };\r\n  }, [\r\n    clickCount,\r\n    keystrokeDurations,\r\n    keyTransitionTimes,\r\n    keyHoldDurations,\r\n    scrollDistance,\r\n    idleTime,\r\n    sessionStart,\r\n    interactionData,\r\n    errorCount,\r\n    dwellTimes,\r\n    navigationEvents,\r\n    // botScore is removed\r\n  ]);\r\n\r\n  const downloadCSV = (data) => {\r\n    const headers = Object.keys(data).join(',');\r\n    const values = Object.values(data).join(',');\r\n\r\n    const csvContent = `${headers}\\n${values}`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'interaction_data.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleAadhaarChange = (e) => {\r\n    const value = e.target.value.replace(/\\s+/g, '');\r\n    if (/^\\d{0,12}$/.test(value)) {\r\n      setAadhaarNumber(value);\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (aadhaarNumber.length === 12) {\r\n      alert('Login successful!');\r\n    } else {\r\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"aadhaarNumber\">Aadhaar Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"aadhaarNumber\"\r\n          value={aadhaarNumber}\r\n          onChange={handleAadhaarChange}\r\n          placeholder=\"Enter your 12-digit Aadhaar number\"\r\n        />\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n      {showCaptcha && <Captcha />}\r\n      <button id=\"loginButton\" onClick={handleLogin} disabled={aadhaarNumber.length !== 12}>\r\n        Login\r\n      </button>\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAI,CAAC,CAAC;AAC1B,MAAMC,wBAAwB,GAAGD,WAAW,GAAG,GAAG,CAAC,CAAC;AACpD,MAAME,sBAAsB,GAAG,KAAK,CAAC,CAAC;;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC;IACrDgB,cAAc,EAAE,CAAC;IACjBC,kBAAkB,EAAE,CAAC;IACrBC,aAAa,EAAE,CAAC;IAChBC,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,gBAAgB,EAAE,CAAC;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,WAAW,EAAE,CAAC;IACdC,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE,CAAC;IAClBC,qBAAqB,EAAE,EAAE;IACzBC,gBAAgB,EAAE,CAAC;IACnBC,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACiC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmB,QAAQ,EAAEkB,WAAW,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC0C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC4C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM8C,YAAY,GAAG,CAAC,CAAC;EACvB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMmD,YAAY,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;EACtC,IAAIC,mBAAmB,GAAGH,YAAY;EACtC,IAAII,kBAAkB,GAAG;IAAEC,CAAC,EAAE,IAAI;IAAEC,CAAC,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;EACzD,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,OAAO;EACvC,IAAIC,aAAa,GAAG,IAAI;EAExB9D,SAAS,CAAC,MAAM;IACd,IAAI+D,eAAe,GAAG,EAAE;IAExB,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;MACpC,MAAMC,WAAW,GAAGf,WAAW,CAACC,GAAG,CAAC,CAAC;MACrC,IAAIE,kBAAkB,CAACC,CAAC,KAAK,IAAI,EAAE;QACjC,MAAMY,EAAE,GAAG,CAACF,KAAK,CAACG,OAAO,GAAGd,kBAAkB,CAACC,CAAC,IAAIlD,wBAAwB;QAC5E,MAAMgE,EAAE,GAAG,CAACJ,KAAK,CAACK,OAAO,GAAGhB,kBAAkB,CAACE,CAAC,IAAInD,wBAAwB;QAC5E,MAAMkE,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,EAAE,GAAGA,EAAE,GAAGE,EAAE,GAAGA,EAAE,CAAC;QAC7C,MAAMK,WAAW,GAAG,CAACR,WAAW,GAAGZ,kBAAkB,CAACG,IAAI,IAAI,IAAI,CAAC,CAAC;;QAEpE,IAAIiB,WAAW,GAAG,CAAC,IAAIA,WAAW,GAAG,CAAC,EAAE;UACtC,IAAIC,KAAK,GAAGJ,QAAQ,GAAGG,WAAW;UAClC,IAAIE,YAAY,GAAG,CAACD,KAAK,GAAG9D,eAAe,CAACE,cAAc,IAAI2D,WAAW;;UAEzE;UACA,IAAIE,YAAY,GAAGtE,sBAAsB,EAAE;YACzCsE,YAAY,GAAGtE,sBAAsB;UACvC;;UAEA;UACAyD,eAAe,CAACc,IAAI,CAAC;YACnBF,KAAK;YACLC,YAAY;YACZnB,IAAI,EAAES;UACR,CAAC,CAAC;;UAEF;UACA,MAAMY,iBAAiB,GAAGf,eAAe,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACtD,MAAMC,QAAQ,GACZF,iBAAiB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACR,KAAK,EAAE,CAAC,CAAC,GAAGG,iBAAiB,CAACM,MAAM;UACnF,MAAMC,eAAe,GACnBP,iBAAiB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACP,YAAY,EAAE,CAAC,CAAC,GAAGE,iBAAiB,CAACM,MAAM;;UAE1F;UACA,MAAME,oBAAoB,GAAGd,IAAI,CAACC,IAAI,CACpC,CAACR,KAAK,CAACG,OAAO,GAAGd,kBAAkB,CAACC,CAAC,KAAK,CAAC,GAC3C,CAACU,KAAK,CAACK,OAAO,GAAGhB,kBAAkB,CAACE,CAAC,KAAK,CAC5C,CAAC;;UAED;UACA,MAAM+B,SAAS,GAAGf,IAAI,CAACgB,GAAG,CAACjB,QAAQ,GAAGe,oBAAoB,CAAC;;UAE3D;UACA,MAAMG,QAAQ,GAAGjB,IAAI,CAACC,IAAI,CAACN,EAAE,GAAGA,EAAE,GAAGE,EAAE,GAAGA,EAAE,CAAC;UAC7C,MAAMqB,QAAQ,GAAGD,QAAQ,GAAG,CAAC,CAAC,CAAC;;UAE/B3E,kBAAkB,CAAE6E,QAAQ,KAAM;YAChC,GAAGA,QAAQ;YACX5E,cAAc,EAAEiE,QAAQ;YACxBhE,kBAAkB,EAAEqE,eAAe;YACnCpE,aAAa,EACX0E,QAAQ,CAAC1E,aAAa,GAAG,CAAC,GACtB,CAAC0E,QAAQ,CAAC1E,aAAa,GAAGsE,SAAS,IAAI,CAAC,GACxCA,SAAS;YACfpE,MAAM,EAAEuE,QAAQ,GAAGC,QAAQ,CAACxE,MAAM,GAAG,CAAC,GAAGwE,QAAQ,CAACxE;UACpD,CAAC,CAAC,CAAC;QACL;MACF;MACAmC,kBAAkB,GAAG;QAAEC,CAAC,EAAEU,KAAK,CAACG,OAAO;QAAEZ,CAAC,EAAES,KAAK,CAACK,OAAO;QAAEb,IAAI,EAAES;MAAY,CAAC;MAC9Eb,mBAAmB,GAAGa,WAAW;IACnC,CAAC;IAED,MAAM0B,WAAW,GAAGA,CAAA,KAAM;MACxB7D,aAAa,CAAE8D,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACjCxC,mBAAmB,GAAGF,WAAW,CAACC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,MAAM0C,aAAa,GAAI7B,KAAK,IAAK;MAC/B,IAAI,CAACpB,YAAY,CAACoB,KAAK,CAAC8B,GAAG,CAAC,EAAE;QAC5BlD,YAAY,CAACoB,KAAK,CAAC8B,GAAG,CAAC,GAAG5C,WAAW,CAACC,GAAG,CAAC,CAAC;MAC7C;IACF,CAAC;IAED,MAAM4C,WAAW,GAAI/B,KAAK,IAAK;MAC7B,IAAIpB,YAAY,CAACoB,KAAK,CAAC8B,GAAG,CAAC,EAAE;QAC3B,MAAME,YAAY,GAAG9C,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGP,YAAY,CAACoB,KAAK,CAAC8B,GAAG,CAAC;QAChEnD,mBAAmB,CAAEsD,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAED,YAAY,CAAC,CAAC;QACxE,OAAOpD,YAAY,CAACoB,KAAK,CAAC8B,GAAG,CAAC;MAChC;IACF,CAAC;IAED,MAAMI,cAAc,GAAIlC,KAAK,IAAK;MAChC,MAAMC,WAAW,GAAGf,WAAW,CAACC,GAAG,CAAC,CAAC;MACrC,IAAIM,gBAAgB,EAAE;QACpB,MAAM0C,QAAQ,GAAGlC,WAAW,GAAGR,gBAAgB;QAC/CzB,qBAAqB,CAAEiE,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAEE,QAAQ,CAAC,CAAC;QACtE1D,qBAAqB,CAAE2D,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,QAAQ,CAAC,CAAC;QAE9D,IAAInC,KAAK,CAAC8B,GAAG,KAAK,WAAW,IAAI9B,KAAK,CAAC8B,GAAG,KAAK,QAAQ,EAAE;UACvDzD,aAAa,CAAEuD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC;MACF;MACAnC,gBAAgB,GAAGQ,WAAW;MAC9Bb,mBAAmB,GAAGa,WAAW;IACnC,CAAC;IAED,MAAMoC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,iBAAiB,GAAG3C,MAAM,CAACC,OAAO;MACxC,MAAM2C,KAAK,GAAGhC,IAAI,CAACgB,GAAG,CAACe,iBAAiB,GAAG5C,kBAAkB,CAAC;MAC9D,IAAI6C,KAAK,GAAG,CAAC,EAAE;QACbrE,iBAAiB,CAAE0D,IAAI,IAAKA,IAAI,GAAGW,KAAK,CAAC;QACzCnD,mBAAmB,GAAGF,WAAW,CAACC,GAAG,CAAC,CAAC;MACzC;MACAO,kBAAkB,GAAG4C,iBAAiB;IACxC,CAAC;IAED,MAAME,WAAW,GAAGA,CAAA,KAAM;MACxB3C,aAAa,GAAGX,WAAW,CAACC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,MAAMsD,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAI5C,aAAa,EAAE;QACjB,MAAM6C,SAAS,GAAGxD,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGU,aAAa;QACnDtB,aAAa,CAAE6D,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEM,SAAS,CAAC,CAAC;QACvD7C,aAAa,GAAG,IAAI;MACtB;IACF,CAAC;IAED,MAAM8C,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,MAAM1C,WAAW,GAAGf,WAAW,CAACC,GAAG,CAAC,CAAC;MACrC,MAAMyD,wBAAwB,GAAG,CAAC3C,WAAW,GAAGb,mBAAmB,IAAI,IAAI,CAAC,CAAC;MAC7E,IAAIwD,wBAAwB,GAAG,CAAC,EAAE;QAChCzE,WAAW,CAAEyD,IAAI,IAAKA,IAAI,GAAGgB,wBAAwB,CAAC;MACxD;MACAxD,mBAAmB,GAAGa,WAAW;IACnC,CAAC;;IAED;IACA,MAAM4C,sBAAsB,GAAGA,CAAA,KAAM;MACnC;IAAA,CACD;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEhD,kBAAkB,CAAC;IAC1D+C,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEpB,WAAW,CAAC;IAC/CmB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAElB,aAAa,CAAC;IACnDiB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEhB,WAAW,CAAC;IAC/Ce,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAEb,cAAc,CAAC;IACrDvC,MAAM,CAACoD,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;;IAE/C;IACA,MAAMW,YAAY,GAAGF,QAAQ,CAACG,cAAc,CAAC,eAAe,CAAC;IAC7D,IAAID,YAAY,EAAE;MAChBA,YAAY,CAACD,gBAAgB,CAAC,OAAO,EAAEP,WAAW,CAAC;MACnDQ,YAAY,CAACD,gBAAgB,CAAC,MAAM,EAAEN,UAAU,CAAC;IACnD;IAEA,MAAMS,YAAY,GAAGC,WAAW,CAACR,iBAAiB,EAAE,IAAI,CAAC;IACzD,MAAMS,gBAAgB,GAAGD,WAAW,CAACN,sBAAsB,EAAE,KAAK,CAAC;IAEnE,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMpD,WAAW,GAAGf,WAAW,CAACC,GAAG,CAAC,CAAC;MACrC,MAAM1B,eAAe,GAAG,CAACwC,WAAW,GAAGhB,YAAY,IAAI,IAAI,CAAC,CAAC;;MAE7D,MAAMqE,qBAAqB,GAAGvF,kBAAkB,CAACiD,MAAM,CAAC,CAACC,GAAG,EAAEsC,GAAG,KAAKtC,GAAG,GAAGsC,GAAG,EAAE,CAAC,CAAC;MACnF,MAAMC,uBAAuB,GAC3BzF,kBAAkB,CAACoD,MAAM,GAAG,CAAC,GAAGmC,qBAAqB,GAAGvF,kBAAkB,CAACoD,MAAM,GAAG,CAAC;MAEvF,MAAM/D,WAAW,GACfK,eAAe,GAAG,CAAC,GACd,CAACM,kBAAkB,CAACoD,MAAM,IAAI1D,eAAe,GAAG,EAAE,CAAC,EAAEgG,OAAO,CAAC,CAAC,CAAC,GAChE,CAAC,CAAC,CAAC;;MAET,MAAMC,wBAAwB,GAC5BlF,kBAAkB,CAAC2C,MAAM,GAAG,CAAC,GACzB3C,kBAAkB,CAACwC,MAAM,CAAC,CAACC,GAAG,EAAEzB,IAAI,KAAKyB,GAAG,GAAGzB,IAAI,EAAE,CAAC,CAAC,GAAGhB,kBAAkB,CAAC2C,MAAM,GACnF,CAAC;MAEP,MAAMwC,kBAAkB,GACtBjF,gBAAgB,CAACyC,MAAM,GAAG,CAAC,GACvBzC,gBAAgB,CAACsC,MAAM,CAAC,CAACC,GAAG,EAAEzB,IAAI,KAAKyB,GAAG,GAAGzB,IAAI,EAAE,CAAC,CAAC,GAAGd,gBAAgB,CAACyC,MAAM,GAC/E,CAAC;MAEP,MAAMxD,gBAAgB,GACpBW,UAAU,CAAC6C,MAAM,GAAG,CAAC,GACjB7C,UAAU,CAAC0C,MAAM,CAAC,CAACC,GAAG,EAAEzB,IAAI,KAAKyB,GAAG,GAAGzB,IAAI,EAAE,CAAC,CAAC,GAAGlB,UAAU,CAAC6C,MAAM,GACnE,CAAC;MAEP,MAAMyC,aAAa,GAAG;QACpB9G,cAAc,EAAEF,eAAe,CAACE,cAAc,GAC1CF,eAAe,CAACE,cAAc,CAAC2G,OAAO,CAAC,CAAC,CAAC,GACzC,CAAC;QACL1G,kBAAkB,EAAEH,eAAe,CAACG,kBAAkB,GAClDH,eAAe,CAACG,kBAAkB,CAAC0G,OAAO,CAAC,CAAC,CAAC,GAC7C,CAAC;QACLzG,aAAa,EAAEJ,eAAe,CAACI,aAAa,GACxCJ,eAAe,CAACI,aAAa,CAACyG,OAAO,CAAC,CAAC,CAAC,GACxC,CAAC;QACLxG,QAAQ,EAAEA,QAAQ,CAACwG,OAAO,CAAC,CAAC,CAAC;QAC7BvG,MAAM,EAAEN,eAAe,CAACM,MAAM,GAAGN,eAAe,CAACM,MAAM,CAACuG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;QACtEtG,YAAY,EAAEU,UAAU;QACxBT,WAAW;QACXC,gBAAgB,EAAEmG,uBAAuB,CAACC,OAAO,CAAC,CAAC,CAAC;QACpDnG,iBAAiB,EAAEoG,wBAAwB,CAACD,OAAO,CAAC,CAAC,CAAC;QACtDlG,WAAW,EAAEoG,kBAAkB,CAACF,OAAO,CAAC,CAAC,CAAC;QAC1CjG,SAAS,EACPO,kBAAkB,CAACoD,MAAM,GAAG,CAAC,GACzB,CAAE/C,UAAU,GAAGL,kBAAkB,CAACoD,MAAM,GAAI,GAAG,EAAEsC,OAAO,CAAC,CAAC,CAAC,GAC3D,CAAC;QACPhG,eAAe,EAAEA,eAAe,CAACgG,OAAO,CAAC,CAAC,CAAC;QAC3C/F,qBAAqB,EAAEmG,IAAI,CAACC,SAAS,CAACjF,gBAAgB,CAAC;QACvDlB,gBAAgB,EAAEA,gBAAgB,CAAC8F,OAAO,CAAC,CAAC,CAAC;QAC7C7F,cAAc,EAAEK,cAAc,CAACwF,OAAO,CAAC,CAAC;QACxC;MACF,CAAC;MAEDM,WAAW,CAACH,aAAa,CAAC;IAC5B,CAAC;IAEDjE,MAAM,CAACoD,gBAAgB,CAAC,cAAc,EAAEM,kBAAkB,CAAC;IAE3D,OAAO,MAAM;MACXP,QAAQ,CAACkB,mBAAmB,CAAC,WAAW,EAAEjE,kBAAkB,CAAC;MAC7D+C,QAAQ,CAACkB,mBAAmB,CAAC,OAAO,EAAErC,WAAW,CAAC;MAClDmB,QAAQ,CAACkB,mBAAmB,CAAC,SAAS,EAAEnC,aAAa,CAAC;MACtDiB,QAAQ,CAACkB,mBAAmB,CAAC,OAAO,EAAEjC,WAAW,CAAC;MAClDe,QAAQ,CAACkB,mBAAmB,CAAC,UAAU,EAAE9B,cAAc,CAAC;MACxDvC,MAAM,CAACqE,mBAAmB,CAAC,QAAQ,EAAE3B,YAAY,CAAC;MAClD1C,MAAM,CAACqE,mBAAmB,CAAC,cAAc,EAAEX,kBAAkB,CAAC;MAC9D,IAAIL,YAAY,EAAE;QAChBA,YAAY,CAACgB,mBAAmB,CAAC,OAAO,EAAExB,WAAW,CAAC;QACtDQ,YAAY,CAACgB,mBAAmB,CAAC,MAAM,EAAEvB,UAAU,CAAC;MACtD;MACAwB,aAAa,CAACf,YAAY,CAAC;MAC3Be,aAAa,CAACb,gBAAgB,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CACDvF,UAAU,EACVE,kBAAkB,EAClBS,kBAAkB,EAClBE,gBAAgB,EAChBT,cAAc,EACdhB,QAAQ,EACRgC,YAAY,EACZrC,eAAe,EACfwB,UAAU,EACVE,UAAU,EACVO;EACA;EAAA,CACD,CAAC;EAEF,MAAMkF,WAAW,GAAIG,IAAI,IAAK;IAC5B,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAC3C,MAAMC,MAAM,GAAGH,MAAM,CAACG,MAAM,CAACL,IAAI,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAE5C,MAAME,UAAU,GAAG,GAAGL,OAAO,KAAKI,MAAM,EAAE;IAC1C,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAErC,MAAMM,IAAI,GAAGjC,QAAQ,CAACkC,aAAa,CAAC,GAAG,CAAC;IACxCD,IAAI,CAACE,IAAI,GAAGL,GAAG;IACfG,IAAI,CAACG,QAAQ,GAAG,sBAAsB;IACtCpC,QAAQ,CAACqC,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;IAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;IACZvC,QAAQ,CAACqC,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC;IAC/BF,GAAG,CAACU,eAAe,CAACX,GAAG,CAAC;EAC1B,CAAC;EAED,MAAMY,mBAAmB,GAAItE,CAAC,IAAK;IACjC,MAAMuE,KAAK,GAAGvE,CAAC,CAACwE,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAChD,IAAI,YAAY,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MAC5BhJ,gBAAgB,CAACgJ,KAAK,CAAC;MACvB9I,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAAC,2CAA2C,CAAC;IAC9D;EACF,CAAC;EAED,MAAMkJ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIrJ,aAAa,CAAC2E,MAAM,KAAK,EAAE,EAAE;MAC/B2E,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,MAAM;MACLnJ,eAAe,CAAC,+CAA+C,CAAC;IAClE;EACF,CAAC;EAED,oBACET,OAAA;IAAK6J,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B9J,OAAA;MAAA8J,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlK,OAAA;MAAK6J,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB9J,OAAA;QAAOmK,OAAO,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtDlK,OAAA;QACEyI,IAAI,EAAC,MAAM;QACX2B,EAAE,EAAC,eAAe;QAClBb,KAAK,EAAEjJ,aAAc;QACrB+J,QAAQ,EAAEf,mBAAoB;QAC9BgB,WAAW,EAAC;MAAoC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EACD1J,YAAY,iBAAIR,OAAA;QAAGuK,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAV,QAAA,EAAEtJ;MAAY;QAAAuJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EACLrH,WAAW,iBAAI7C,OAAA,CAACF,OAAO;MAAAiK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BlK,OAAA;MAAQoK,EAAE,EAAC,aAAa;MAACK,OAAO,EAAEd,WAAY;MAACe,QAAQ,EAAEpK,aAAa,CAAC2E,MAAM,KAAK,EAAG;MAAA6E,QAAA,EAAC;IAEtF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlK,OAAA;MAAA8J,QAAA,eACE9J,OAAA;QAAA8J,QAAA,EAAG;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC7J,EAAA,CAjVID,MAAM;AAAAuK,EAAA,GAANvK,MAAM;AAmVZ,eAAeA,MAAM;AAAC,IAAAuK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}