{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\Portal.jsx\",\n  _s = $RefreshSig$();\n// Portal.jsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './components/styles.css'; // Ensure the path is correct\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portal = () => {\n  _s();\n  // State variables\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    keyTransitionStdDev: 0,\n    typingAccuracy: 100,\n    errorRate: 0,\n    sessionDuration: 0,\n    averageDwellTime: 0,\n    scrollBehavior: 0,\n    interactionComplexity: 0,\n    scrollDirection: '',\n    // 'up' or 'down'\n    scrollVelocity: 0 // pixels per second\n  });\n\n  // Additional state variables\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\n\n  // Refs for tracking events\n  const keyDownTimes = useRef({});\n  const lastKeyDownTimeRef = useRef(null);\n  const sessionStartRef = useRef(performance.now());\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\n  const lastCursorPositionRef = useRef({\n    x: null,\n    y: null,\n    time: null\n  });\n  const lastScrollPositionRef = useRef(window.scrollY);\n  const lastFocusTimeRef = useRef(null);\n\n  // Ref to keep track of the latest avgCursorSpeed\n  const avgCursorSpeedRef = useRef(interactionData.avgCursorSpeed);\n\n  // Update the ref whenever avgCursorSpeed changes\n  useEffect(() => {\n    avgCursorSpeedRef.current = interactionData.avgCursorSpeed;\n  }, [interactionData.avgCursorSpeed]);\n\n  // Utility function to calculate standard deviation\n  const calculateStandardDeviation = values => {\n    const n = values.length;\n    if (n === 0) return 0;\n    const mean = values.reduce((a, b) => a + b, 0) / n;\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\n    return Math.sqrt(variance);\n  };\n  useEffect(() => {\n    let mouseMoveEvents = [];\n\n    // Throttle function to limit the frequency of event handler execution\n    const throttle = (func, limit) => {\n      let lastFunc;\n      let lastRan;\n      return function (...args) {\n        const context = this;\n        if (!lastRan) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        } else {\n          clearTimeout(lastFunc);\n          lastFunc = setTimeout(function () {\n            if (Date.now() - lastRan >= limit) {\n              func.apply(context, args);\n              lastRan = Date.now();\n            }\n          }, limit - (Date.now() - lastRan));\n        }\n      };\n    };\n    const trackMouseMovement = throttle(event => {\n      const currentTime = performance.now();\n      const lastCursorPosition = lastCursorPositionRef.current;\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / 100; // Adjust normalization as needed\n        const dy = (event.clientY - lastCursorPosition.y) / 100; // Adjust normalization as needed\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - avgCursorSpeedRef.current) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > 5000) {\n            // Example threshold\n            acceleration = 5000;\n          } else if (acceleration < -5000) {\n            acceleration = -5000;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Keep only the last 50 events for moving average\n          const recentMouseEvents = mouseMoveEvents.slice(-50);\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n\n          // Calculate straight-line distance between last position and current position\n          const straightLineDistance = Math.sqrt((event.clientX - lastCursorPosition.x) ** 2 + (event.clientY - lastCursorPosition.y) ** 2);\n\n          // Calculate path deviation as the absolute difference between actual distance and straight-line distance\n          const deviation = Math.abs(distance - straightLineDistance);\n\n          // Dynamic jitter threshold based on avgCursorSpeed\n          const jitterThreshold = avgCursorSpeedRef.current * 0.05; // 5% of avg speed\n          const movement = Math.sqrt(dx * dx + dy * dy);\n          const isJitter = movement < jitterThreshold;\n          setInteractionData(prevData => {\n            const updatedData = {\n              ...prevData,\n              avgCursorSpeed: avgSpeed,\n              cursorAcceleration: avgAcceleration,\n              pathDeviation: prevData.pathDeviation > 0 ? (prevData.pathDeviation * (recentMouseEvents.length - 1) + deviation) / recentMouseEvents.length : deviation,\n              jitter: isJitter ? prevData.jitter + 1 : prevData.jitter\n            };\n            return updatedData;\n          });\n        }\n      }\n      lastCursorPositionRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTimeRef.current = currentTime;\n    }, 100); // Throttle to once every 100ms\n\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTimeRef.current = performance.now();\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\n\n      // Determine scroll direction before updating lastScrollPositionRef.current\n      let direction = '';\n      if (newScrollPosition > lastScrollPositionRef.current) {\n        direction = 'down';\n      } else if (newScrollPosition < lastScrollPositionRef.current) {\n        direction = 'up';\n      } else {\n        direction = interactionData.scrollDirection; // No change\n      }\n\n      // Scroll Velocity Calculation\n      const currentTime = performance.now();\n      const deltaTime = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\n      const velocity = deltaTime > 0 ? delta / deltaTime : 0; // pixels per second\n\n      if (delta > 0) {\n        setScrollDistance(prev => prev + delta);\n        setInteractionData(prevData => ({\n          ...prevData,\n          scrollBehavior: prevData.scrollBehavior + delta,\n          scrollDirection: direction,\n          scrollVelocity: velocity\n        }));\n        lastInteractionTimeRef.current = currentTime;\n      }\n      lastScrollPositionRef.current = newScrollPosition;\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\n      }\n    };\n\n    // Key event handlers\n    const handleKeyDown = event => {\n      const currentTime = performance.now();\n      if (!keyDownTimes.current[event.code]) {\n        keyDownTimes.current[event.code] = currentTime;\n\n        // Calculate key transition time\n        if (lastKeyDownTimeRef.current !== null) {\n          const transitionTime = currentTime - lastKeyDownTimeRef.current;\n          setKeyTransitionTimes(prevTimes => [...prevTimes, transitionTime]);\n        }\n        lastKeyDownTimeRef.current = currentTime;\n        lastInteractionTimeRef.current = currentTime;\n      }\n    };\n    const handleKeyUp = event => {\n      const currentTime = performance.now();\n      if (keyDownTimes.current[event.code]) {\n        const keyPressDuration = currentTime - keyDownTimes.current[event.code];\n        // Record keystroke duration (key press duration)\n        setKeystrokeDurations(prevDurations => [...prevDurations, keyPressDuration]);\n\n        // Increment error count for specific keys\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n          setErrorCount(prev => prev + 1);\n        }\n        delete keyDownTimes.current[event.code];\n      }\n    };\n    const handleFocusIn = event => {\n      const target = event.target;\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        target.addEventListener('keydown', handleKeyDown);\n        target.addEventListener('keyup', handleKeyUp);\n        lastFocusTimeRef.current = performance.now();\n      }\n    };\n    const handleFocusOut = event => {\n      const target = event.target;\n      if (lastFocusTimeRef.current) {\n        const dwellTime = performance.now() - lastFocusTimeRef.current;\n        setDwellTimes(prevTimes => [...prevTimes, dwellTime]);\n        lastFocusTimeRef.current = null;\n      }\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        target.removeEventListener('keydown', handleKeyDown);\n        target.removeEventListener('keyup', handleKeyUp);\n      }\n    };\n\n    // Event listeners\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    window.addEventListener('scroll', handleScroll);\n    document.addEventListener('focusin', handleFocusIn);\n    document.addEventListener('focusout', handleFocusOut);\n\n    // Idle time calculation interval\n    const idleInterval = setInterval(calculateIdleTime, 5000); // Every 5 seconds\n\n    // Cleanup on unmount\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      window.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('focusin', handleFocusIn);\n      document.removeEventListener('focusout', handleFocusOut);\n      clearInterval(idleInterval);\n    };\n  }, []); // Empty dependency array as refs handle dynamic data\n\n  // Aadhaar number input handler with validation\n  const handleAadhaarChange = e => {\n    const value = e.target.value.replace(/\\s+/g, '');\n    if (/^\\d{0,12}$/.test(value)) {\n      setAadhaarNumber(value);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\n    }\n  };\n\n  // Helper function to calculate interaction complexity\n  const calculateInteractionComplexity = () => {\n    const {\n      avgCursorSpeed,\n      cursorAcceleration,\n      pathDeviation,\n      typingSpeed,\n      scrollBehavior\n    } = interactionData;\n    const interactionComplexity = avgCursorSpeed * 0.3 + cursorAcceleration * 0.2 + pathDeviation * 0.2 + typingSpeed * 0.2 + scrollBehavior * 0.1;\n    return parseFloat(interactionComplexity.toFixed(2));\n  };\n\n  // Function to calculate typing accuracy\n  const calculateTypingAccuracy = () => {\n    const totalKeystrokes = keystrokeDurations.length;\n    const correctKeystrokes = totalKeystrokes - errorCount;\n    const typingAccuracy = totalKeystrokes > 0 ? (correctKeystrokes / totalKeystrokes * 100).toFixed(2) : 100;\n    return parseFloat(typingAccuracy);\n  };\n\n  // Function to parse and sanitize data before sending\n  const sanitizeData = () => {\n    const {\n      avgCursorSpeed,\n      cursorAcceleration,\n      pathDeviation,\n      idleTime,\n      jitter,\n      clickPattern,\n      typingSpeed,\n      keyPressDuration,\n      keyTransitionTime,\n      keyTransitionStdDev,\n      typingAccuracy,\n      errorRate,\n      sessionDuration,\n      averageDwellTime,\n      scrollBehavior,\n      interactionComplexity,\n      scrollDirection,\n      scrollVelocity\n    } = interactionData;\n\n    // Validate numerical fields\n    const isValid = avgCursorSpeed >= 0 && Math.abs(cursorAcceleration) <= 50000 &&\n    // Example threshold\n    pathDeviation >= 0 && idleTime >= 0 && jitter >= 0 && clickPattern >= 0 && typingSpeed >= 0 && keyPressDuration >= 0 && keyTransitionTime >= 0 && keyTransitionStdDev >= 0 && typingAccuracy >= 0 && errorRate >= 0 && sessionDuration >= 0 && averageDwellTime >= 0 && scrollBehavior >= 0 && interactionComplexity >= 0 && (scrollDirection === 'up' || scrollDirection === 'down') && scrollVelocity >= 0;\n    return isValid;\n  };\n\n  // Function to export data to CSV\n  const exportToCSV = (data, filename = 'interaction_data.csv') => {\n    if (!data || data.length === 0) {\n      console.error('No data available to export.');\n      return;\n    }\n    const headers = Object.keys(data[0]);\n    const rows = data.map(row => headers.map(header => `\"${row[header] || ''}\"`).join(','));\n    const csvContent = [headers.join(','), ...rows].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Function to scroll to top\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Login handler with data submission\n  const handleLogin = async () => {\n    // Capture the end time of the session\n    const endTime = performance.now();\n    const sessionDurationInSeconds = (endTime - sessionStartRef.current) / 1000; // Convert milliseconds to seconds\n\n    // Compute averages and derived metrics\n    const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\n    const averageKeyPressDuration = keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\n    const typingSpeed = sessionDurationInSeconds > 0 ? (keystrokeDurations.length / (sessionDurationInSeconds / 60)).toFixed(2) // chars per minute\n    : 0;\n    const averageKeyTransitionTime = keyTransitionTimes.length > 0 ? (keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length).toFixed(2) : 0;\n    const keyTransitionStdDev = calculateStandardDeviation(keyTransitionTimes).toFixed(2);\n    const averageDwellTime = dwellTimes.length > 0 ? (dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length).toFixed(2) : 0;\n    const errorRate = keystrokeDurations.length > 0 ? (errorCount / keystrokeDurations.length * 100).toFixed(2) : 0;\n    const typingAccuracy = calculateTypingAccuracy();\n    const interactionComplexity = calculateInteractionComplexity();\n    const formattedData = {\n      userId: aadhaarNumber.trim() !== '' ? aadhaarNumber.trim() : 'anonymous-user',\n      avgCursorSpeed: parseFloat(interactionData.avgCursorSpeed.toFixed(2)),\n      cursorAcceleration: parseFloat(interactionData.cursorAcceleration.toFixed(2)),\n      pathDeviation: parseFloat(interactionData.pathDeviation.toFixed(2)),\n      idleTime: parseFloat(idleTime.toFixed(2)),\n      jitter: parseFloat(interactionData.jitter.toFixed(2)),\n      clickPattern: clickCount,\n      typingSpeed: parseFloat(typingSpeed),\n      keyPressDuration: parseFloat(averageKeyPressDuration.toFixed(2)),\n      keyTransitionTime: parseFloat(averageKeyTransitionTime),\n      keyTransitionStdDev: parseFloat(keyTransitionStdDev),\n      typingAccuracy: typingAccuracy,\n      errorRate: parseFloat(errorRate),\n      sessionDuration: parseFloat(sessionDurationInSeconds.toFixed(2)),\n      averageDwellTime: parseFloat(averageDwellTime),\n      scrollBehavior: parseFloat(interactionData.scrollBehavior.toFixed(2)),\n      interactionComplexity: interactionComplexity,\n      scrollDirection: interactionData.scrollDirection,\n      scrollVelocity: parseFloat(interactionData.scrollVelocity.toFixed(2))\n    };\n\n    // Validate data before sending\n    if (!sanitizeData()) {\n      setErrorMessage('Detected invalid interaction data. Please try again.');\n      return;\n    }\n\n    // Debugging: Log formatted data before sending\n    console.log('--- Formatted Data to Send ---', formattedData);\n    try {\n      const response = await axios.post('http://localhost:5000/api/collect-data', formattedData);\n      console.log('Server Response:', response.data);\n      exportToCSV([formattedData]); // Exporting as an array to match CSV function\n\n      // Scroll to top after successful login\n      scrollToTop();\n    } catch (error) {\n      console.error('Error sending interaction data to backend:', error);\n      setErrorMessage('Failed to send data to the server. Please try again.');\n    }\n    if (aadhaarNumber.length === 12) {\n      alert('Login successful!');\n      // Optionally, reset form or redirect user\n    } else {\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\n    }\n\n    // Reset session start time for the next session\n    sessionStartRef.current = performance.now();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aadhaarNumber\",\n        children: \"Aadhaar Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aadhaarNumber\",\n        value: aadhaarNumber,\n        onChange: handleAadhaarChange,\n        placeholder: \"Enter your 12-digit Aadhaar number\",\n        maxLength: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginButton\",\n      onClick: handleLogin,\n      disabled: aadhaarNumber.length !== 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-to-top\",\n      onClick: scrollToTop,\n      \"aria-label\": \"Scroll to Top\",\n      children: \"\\u2191\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: Array.from({\n        length: 50\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is additional content to enable scrolling on the page. Scroll down to see more.\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        /* Ensure the html and body elements allow scrolling */\n        html, body {\n          height: 100%;\n          margin: 0;\n          padding: 0;\n          overflow-x: hidden; /* Prevent horizontal scrolling */\n          overflow-y: scroll; /* Always show vertical scrollbar */\n          scroll-behavior: smooth; /* Enables smooth scrolling */\n        }\n\n        .portal-container {\n          border: 1px solid #ccc;\n          padding: 30px;\n          width: 400px;\n          margin: 50px auto;\n          text-align: center;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n          border-radius: 8px;\n          animation: fadeIn 1.5s ease-in-out;\n          /* Removed any fixed height to allow natural expansion */\n        }\n\n        .form-group {\n          margin-bottom: 15px;\n          text-align: left;\n        }\n\n        label {\n          display: block;\n          margin-bottom: 5px;\n          font-weight: bold;\n        }\n\n        input[type=\"text\"] {\n          padding: 8px;\n          width: 100%;\n          margin-bottom: 10px;\n          border-radius: 4px;\n          border: 1px solid #ccc;\n          animation: slideIn 1s ease-in-out;\n        }\n\n        button {\n          background: #007bff;\n          color: white;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          animation: slideIn 1.5s ease-in-out;\n        }\n\n        button:disabled {\n          background-color: #ccc;\n          cursor: not-allowed;\n        }\n\n        button:hover:not(:disabled) {\n          background: #0056b3;\n          transform: scale(1.05);\n        }\n\n        footer {\n          margin-top: 40px;\n          text-align: center;\n          color: #555;\n        }\n\n        .scroll-to-top {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          padding: 10px 15px;\n          background-color: #046a38;\n          color: white;\n          border: none;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n          font-size: 18px;\n          z-index: 1000;\n        }\n\n        .scroll-to-top:hover {\n          background-color: #035529;\n        }\n\n        /* Responsive Design Enhancements */\n        @media (max-width: 768px) {\n          .portal-container {\n            width: 90%; /* Make the container width responsive */\n            padding: 20px; /* Adjust padding for smaller screens */\n            margin: 20px auto; /* Reduce margin on smaller screens */\n          }\n\n          .scroll-to-top {\n            padding: 8px 12px;\n            font-size: 16px;\n          }\n        }\n\n        @keyframes fadeIn {\n          0% { opacity: 0; transform: translateY(-20px); }\n          100% { opacity: 1; transform: translateY(0); }\n        }\n\n        @keyframes slideIn {\n          0% { opacity: 0; transform: translateY(30px); }\n          100% { opacity: 1; transform: translateY(0); }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"5k2Lf9dXNCqsM1miFsfwOpFViWY=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","keyTransitionStdDev","typingAccuracy","errorRate","sessionDuration","averageDwellTime","scrollBehavior","interactionComplexity","scrollDirection","scrollVelocity","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","keyTransitionTimes","setKeyTransitionTimes","keyDownTimes","lastKeyDownTimeRef","sessionStartRef","performance","now","lastInteractionTimeRef","current","lastCursorPositionRef","x","y","time","lastScrollPositionRef","window","scrollY","lastFocusTimeRef","avgCursorSpeedRef","calculateStandardDeviation","values","n","length","mean","reduce","a","b","variance","Math","sqrt","mouseMoveEvents","throttle","func","limit","lastFunc","lastRan","args","context","apply","Date","clearTimeout","setTimeout","trackMouseMovement","event","currentTime","lastCursorPosition","dx","clientX","dy","clientY","distance","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","sum","e","avgAcceleration","straightLineDistance","deviation","abs","jitterThreshold","movement","isJitter","prevData","updatedData","handleClick","prev","handleScroll","newScrollPosition","delta","direction","deltaTime","velocity","calculateIdleTime","timeSinceLastInteraction","handleKeyDown","code","transitionTime","prevTimes","handleKeyUp","prevDurations","key","handleFocusIn","target","tagName","isContentEditable","addEventListener","handleFocusOut","dwellTime","removeEventListener","document","idleInterval","setInterval","clearInterval","handleAadhaarChange","value","replace","test","calculateInteractionComplexity","parseFloat","toFixed","calculateTypingAccuracy","totalKeystrokes","correctKeystrokes","sanitizeData","isValid","exportToCSV","data","filename","console","error","headers","Object","keys","rows","map","row","header","join","csvContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","click","removeChild","scrollToTop","scrollTo","top","behavior","handleLogin","endTime","sessionDurationInSeconds","totalKeyPressDuration","dur","averageKeyPressDuration","averageKeyTransitionTime","formattedData","userId","trim","log","response","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","maxLength","style","color","onClick","disabled","padding","textAlign","Array","from","_","index","jsx","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/Portal.jsx"],"sourcesContent":["// Portal.jsx\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './components/styles.css'; // Ensure the path is correct\r\nimport axios from 'axios';\r\n\r\nconst Portal = () => {\r\n  // State variables\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    keyTransitionStdDev: 0,\r\n    typingAccuracy: 100,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n    interactionComplexity: 0,\r\n    scrollDirection: '', // 'up' or 'down'\r\n    scrollVelocity: 0,   // pixels per second\r\n  });\r\n\r\n  // Additional state variables\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\r\n\r\n  // Refs for tracking events\r\n  const keyDownTimes = useRef({});\r\n  const lastKeyDownTimeRef = useRef(null);\r\n  const sessionStartRef = useRef(performance.now());\r\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\r\n  const lastCursorPositionRef = useRef({ x: null, y: null, time: null });\r\n  const lastScrollPositionRef = useRef(window.scrollY);\r\n  const lastFocusTimeRef = useRef(null);\r\n\r\n  // Ref to keep track of the latest avgCursorSpeed\r\n  const avgCursorSpeedRef = useRef(interactionData.avgCursorSpeed);\r\n\r\n  // Update the ref whenever avgCursorSpeed changes\r\n  useEffect(() => {\r\n    avgCursorSpeedRef.current = interactionData.avgCursorSpeed;\r\n  }, [interactionData.avgCursorSpeed]);\r\n\r\n  // Utility function to calculate standard deviation\r\n  const calculateStandardDeviation = (values) => {\r\n    const n = values.length;\r\n    if (n === 0) return 0;\r\n    const mean = values.reduce((a, b) => a + b, 0) / n;\r\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\r\n    return Math.sqrt(variance);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n\r\n    // Throttle function to limit the frequency of event handler execution\r\n    const throttle = (func, limit) => {\r\n      let lastFunc;\r\n      let lastRan;\r\n      return function (...args) {\r\n        const context = this;\r\n        if (!lastRan) {\r\n          func.apply(context, args);\r\n          lastRan = Date.now();\r\n        } else {\r\n          clearTimeout(lastFunc);\r\n          lastFunc = setTimeout(function () {\r\n            if (Date.now() - lastRan >= limit) {\r\n              func.apply(context, args);\r\n              lastRan = Date.now();\r\n            }\r\n          }, limit - (Date.now() - lastRan));\r\n        }\r\n      };\r\n    };\r\n\r\n    const trackMouseMovement = throttle((event) => {\r\n      const currentTime = performance.now();\r\n      const lastCursorPosition = lastCursorPositionRef.current;\r\n\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / 100; // Adjust normalization as needed\r\n        const dy = (event.clientY - lastCursorPosition.y) / 100; // Adjust normalization as needed\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - avgCursorSpeedRef.current) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > 5000) { // Example threshold\r\n            acceleration = 5000;\r\n          } else if (acceleration < -5000) {\r\n            acceleration = -5000;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Keep only the last 50 events for moving average\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50);\r\n\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          // Calculate straight-line distance between last position and current position\r\n          const straightLineDistance = Math.sqrt(\r\n            (event.clientX - lastCursorPosition.x) ** 2 +\r\n              (event.clientY - lastCursorPosition.y) ** 2\r\n          );\r\n\r\n          // Calculate path deviation as the absolute difference between actual distance and straight-line distance\r\n          const deviation = Math.abs(distance - straightLineDistance);\r\n\r\n          // Dynamic jitter threshold based on avgCursorSpeed\r\n          const jitterThreshold = avgCursorSpeedRef.current * 0.05; // 5% of avg speed\r\n          const movement = Math.sqrt(dx * dx + dy * dy);\r\n          const isJitter = movement < jitterThreshold;\r\n\r\n          setInteractionData((prevData) => {\r\n            const updatedData = {\r\n              ...prevData,\r\n              avgCursorSpeed: avgSpeed,\r\n              cursorAcceleration: avgAcceleration,\r\n              pathDeviation:\r\n                prevData.pathDeviation > 0\r\n                  ? (prevData.pathDeviation * (recentMouseEvents.length - 1) + deviation) / recentMouseEvents.length\r\n                  : deviation,\r\n              jitter: isJitter ? prevData.jitter + 1 : prevData.jitter,\r\n            };\r\n\r\n            return updatedData;\r\n          });\r\n        }\r\n      }\r\n\r\n      lastCursorPositionRef.current = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTimeRef.current = currentTime;\r\n    }, 100); // Throttle to once every 100ms\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTimeRef.current = performance.now();\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\r\n\r\n      // Determine scroll direction before updating lastScrollPositionRef.current\r\n      let direction = '';\r\n      if (newScrollPosition > lastScrollPositionRef.current) {\r\n        direction = 'down';\r\n      } else if (newScrollPosition < lastScrollPositionRef.current) {\r\n        direction = 'up';\r\n      } else {\r\n        direction = interactionData.scrollDirection; // No change\r\n      }\r\n\r\n      // Scroll Velocity Calculation\r\n      const currentTime = performance.now();\r\n      const deltaTime = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\r\n      const velocity = deltaTime > 0 ? delta / deltaTime : 0; // pixels per second\r\n\r\n      if (delta > 0) {\r\n        setScrollDistance((prev) => prev + delta);\r\n        setInteractionData((prevData) => ({\r\n          ...prevData,\r\n          scrollBehavior: prevData.scrollBehavior + delta,\r\n          scrollDirection: direction,\r\n          scrollVelocity: velocity,\r\n        }));\r\n        lastInteractionTimeRef.current = currentTime;\r\n      }\r\n\r\n      lastScrollPositionRef.current = newScrollPosition;\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\r\n      }\r\n    };\r\n\r\n    // Key event handlers\r\n    const handleKeyDown = (event) => {\r\n      const currentTime = performance.now();\r\n\r\n      if (!keyDownTimes.current[event.code]) {\r\n        keyDownTimes.current[event.code] = currentTime;\r\n\r\n        // Calculate key transition time\r\n        if (lastKeyDownTimeRef.current !== null) {\r\n          const transitionTime = currentTime - lastKeyDownTimeRef.current;\r\n          setKeyTransitionTimes((prevTimes) => [...prevTimes, transitionTime]);\r\n        }\r\n        lastKeyDownTimeRef.current = currentTime;\r\n        lastInteractionTimeRef.current = currentTime;\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event) => {\r\n      const currentTime = performance.now();\r\n\r\n      if (keyDownTimes.current[event.code]) {\r\n        const keyPressDuration = currentTime - keyDownTimes.current[event.code];\r\n        // Record keystroke duration (key press duration)\r\n        setKeystrokeDurations((prevDurations) => [...prevDurations, keyPressDuration]);\r\n\r\n        // Increment error count for specific keys\r\n        if (event.key === 'Backspace' || event.key === 'Delete') {\r\n          setErrorCount((prev) => prev + 1);\r\n        }\r\n\r\n        delete keyDownTimes.current[event.code];\r\n      }\r\n    };\r\n\r\n    const handleFocusIn = (event) => {\r\n      const target = event.target;\r\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\r\n        target.addEventListener('keydown', handleKeyDown);\r\n        target.addEventListener('keyup', handleKeyUp);\r\n        lastFocusTimeRef.current = performance.now();\r\n      }\r\n    };\r\n\r\n    const handleFocusOut = (event) => {\r\n      const target = event.target;\r\n      if (lastFocusTimeRef.current) {\r\n        const dwellTime = performance.now() - lastFocusTimeRef.current;\r\n        setDwellTimes((prevTimes) => [...prevTimes, dwellTime]);\r\n        lastFocusTimeRef.current = null;\r\n      }\r\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\r\n        target.removeEventListener('keydown', handleKeyDown);\r\n        target.removeEventListener('keyup', handleKeyUp);\r\n      }\r\n    };\r\n\r\n    // Event listeners\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    window.addEventListener('scroll', handleScroll);\r\n    document.addEventListener('focusin', handleFocusIn);\r\n    document.addEventListener('focusout', handleFocusOut);\r\n\r\n    // Idle time calculation interval\r\n    const idleInterval = setInterval(calculateIdleTime, 5000); // Every 5 seconds\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      document.removeEventListener('focusin', handleFocusIn);\r\n      document.removeEventListener('focusout', handleFocusOut);\r\n      clearInterval(idleInterval);\r\n    };\r\n  }, []); // Empty dependency array as refs handle dynamic data\r\n\r\n  // Aadhaar number input handler with validation\r\n  const handleAadhaarChange = (e) => {\r\n    const value = e.target.value.replace(/\\s+/g, '');\r\n    if (/^\\d{0,12}$/.test(value)) {\r\n      setAadhaarNumber(value);\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\r\n    }\r\n  };\r\n\r\n  // Helper function to calculate interaction complexity\r\n  const calculateInteractionComplexity = () => {\r\n    const {\r\n      avgCursorSpeed,\r\n      cursorAcceleration,\r\n      pathDeviation,\r\n      typingSpeed,\r\n      scrollBehavior,\r\n    } = interactionData;\r\n\r\n    const interactionComplexity =\r\n      avgCursorSpeed * 0.3 +\r\n      cursorAcceleration * 0.2 +\r\n      pathDeviation * 0.2 +\r\n      typingSpeed * 0.2 +\r\n      scrollBehavior * 0.1;\r\n\r\n    return parseFloat(interactionComplexity.toFixed(2));\r\n  };\r\n\r\n  // Function to calculate typing accuracy\r\n  const calculateTypingAccuracy = () => {\r\n    const totalKeystrokes = keystrokeDurations.length;\r\n    const correctKeystrokes = totalKeystrokes - errorCount;\r\n    const typingAccuracy = totalKeystrokes > 0\r\n      ? ((correctKeystrokes / totalKeystrokes) * 100).toFixed(2)\r\n      : 100;\r\n\r\n    return parseFloat(typingAccuracy);\r\n  };\r\n\r\n  // Function to parse and sanitize data before sending\r\n  const sanitizeData = () => {\r\n    const {\r\n      avgCursorSpeed,\r\n      cursorAcceleration,\r\n      pathDeviation,\r\n      idleTime,\r\n      jitter,\r\n      clickPattern,\r\n      typingSpeed,\r\n      keyPressDuration,\r\n      keyTransitionTime,\r\n      keyTransitionStdDev,\r\n      typingAccuracy,\r\n      errorRate,\r\n      sessionDuration,\r\n      averageDwellTime,\r\n      scrollBehavior,\r\n      interactionComplexity,\r\n      scrollDirection,\r\n      scrollVelocity,\r\n    } = interactionData;\r\n\r\n    // Validate numerical fields\r\n    const isValid =\r\n      avgCursorSpeed >= 0 &&\r\n      Math.abs(cursorAcceleration) <= 50000 && // Example threshold\r\n      pathDeviation >= 0 &&\r\n      idleTime >= 0 &&\r\n      jitter >= 0 &&\r\n      clickPattern >= 0 &&\r\n      typingSpeed >= 0 &&\r\n      keyPressDuration >= 0 &&\r\n      keyTransitionTime >= 0 &&\r\n      keyTransitionStdDev >= 0 &&\r\n      typingAccuracy >= 0 &&\r\n      errorRate >= 0 &&\r\n      sessionDuration >= 0 &&\r\n      averageDwellTime >= 0 &&\r\n      scrollBehavior >= 0 &&\r\n      interactionComplexity >= 0 &&\r\n      (scrollDirection === 'up' || scrollDirection === 'down') &&\r\n      scrollVelocity >= 0;\r\n\r\n    return isValid;\r\n  };\r\n\r\n  // Function to export data to CSV\r\n  const exportToCSV = (data, filename = 'interaction_data.csv') => {\r\n    if (!data || data.length === 0) {\r\n      console.error('No data available to export.');\r\n      return;\r\n    }\r\n\r\n    const headers = Object.keys(data[0]);\r\n    const rows = data.map(row =>\r\n      headers.map(header => `\"${row[header] || ''}\"`).join(',')\r\n    );\r\n    const csvContent = [headers.join(','), ...rows].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Function to scroll to top\r\n  const scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Login handler with data submission\r\n  const handleLogin = async () => {\r\n    // Capture the end time of the session\r\n    const endTime = performance.now();\r\n    const sessionDurationInSeconds = (endTime - sessionStartRef.current) / 1000; // Convert milliseconds to seconds\r\n\r\n    // Compute averages and derived metrics\r\n    const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\r\n    const averageKeyPressDuration =\r\n      keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\r\n\r\n    const typingSpeed =\r\n      sessionDurationInSeconds > 0\r\n        ? (keystrokeDurations.length / (sessionDurationInSeconds / 60)).toFixed(2) // chars per minute\r\n        : 0;\r\n\r\n    const averageKeyTransitionTime =\r\n      keyTransitionTimes.length > 0\r\n        ? (keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length).toFixed(2)\r\n        : 0;\r\n\r\n    const keyTransitionStdDev = calculateStandardDeviation(keyTransitionTimes).toFixed(2);\r\n\r\n    const averageDwellTime =\r\n      dwellTimes.length > 0\r\n        ? (dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length).toFixed(2)\r\n        : 0;\r\n\r\n    const errorRate =\r\n      keystrokeDurations.length > 0\r\n        ? ((errorCount / keystrokeDurations.length) * 100).toFixed(2)\r\n        : 0;\r\n\r\n    const typingAccuracy = calculateTypingAccuracy();\r\n\r\n    const interactionComplexity = calculateInteractionComplexity();\r\n\r\n    const formattedData = {\r\n      userId: aadhaarNumber.trim() !== '' ? aadhaarNumber.trim() : 'anonymous-user',\r\n      avgCursorSpeed: parseFloat(interactionData.avgCursorSpeed.toFixed(2)),\r\n      cursorAcceleration: parseFloat(interactionData.cursorAcceleration.toFixed(2)),\r\n      pathDeviation: parseFloat(interactionData.pathDeviation.toFixed(2)),\r\n      idleTime: parseFloat(idleTime.toFixed(2)),\r\n      jitter: parseFloat(interactionData.jitter.toFixed(2)),\r\n      clickPattern: clickCount,\r\n      typingSpeed: parseFloat(typingSpeed),\r\n      keyPressDuration: parseFloat(averageKeyPressDuration.toFixed(2)),\r\n      keyTransitionTime: parseFloat(averageKeyTransitionTime),\r\n      keyTransitionStdDev: parseFloat(keyTransitionStdDev),\r\n      typingAccuracy: typingAccuracy,\r\n      errorRate: parseFloat(errorRate),\r\n      sessionDuration: parseFloat(sessionDurationInSeconds.toFixed(2)),\r\n      averageDwellTime: parseFloat(averageDwellTime),\r\n      scrollBehavior: parseFloat(interactionData.scrollBehavior.toFixed(2)),\r\n      interactionComplexity: interactionComplexity,\r\n      scrollDirection: interactionData.scrollDirection,\r\n      scrollVelocity: parseFloat(interactionData.scrollVelocity.toFixed(2)),\r\n    };\r\n\r\n    // Validate data before sending\r\n    if (!sanitizeData()) {\r\n      setErrorMessage('Detected invalid interaction data. Please try again.');\r\n      return;\r\n    }\r\n\r\n    // Debugging: Log formatted data before sending\r\n    console.log('--- Formatted Data to Send ---', formattedData);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/collect-data', formattedData);\r\n      console.log('Server Response:', response.data);\r\n      exportToCSV([formattedData]); // Exporting as an array to match CSV function\r\n\r\n      // Scroll to top after successful login\r\n      scrollToTop();\r\n    } catch (error) {\r\n      console.error('Error sending interaction data to backend:', error);\r\n      setErrorMessage('Failed to send data to the server. Please try again.');\r\n    }\r\n\r\n    if (aadhaarNumber.length === 12) {\r\n      alert('Login successful!');\r\n      // Optionally, reset form or redirect user\r\n    } else {\r\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\r\n    }\r\n\r\n    // Reset session start time for the next session\r\n    sessionStartRef.current = performance.now();\r\n  };\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"aadhaarNumber\">Aadhaar Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"aadhaarNumber\"\r\n          value={aadhaarNumber}\r\n          onChange={handleAadhaarChange}\r\n          placeholder=\"Enter your 12-digit Aadhaar number\"\r\n          maxLength={12}\r\n        />\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n      {/* Login Button */}\r\n      <button\r\n        id=\"loginButton\"\r\n        onClick={handleLogin}\r\n        disabled={aadhaarNumber.length !== 12}\r\n      >\r\n        Login\r\n      </button>\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n\r\n      {/* Optional: Scroll to Top Button */}\r\n      <button\r\n        className=\"scroll-to-top\"\r\n        onClick={scrollToTop}\r\n        aria-label=\"Scroll to Top\"\r\n      >\r\n        ↑\r\n      </button>\r\n\r\n      {/* Optional: Additional Content to Enable Scrolling */}\r\n      <div style={{ padding: '20px', textAlign: 'center' }}>\r\n        {Array.from({ length: 50 }).map((_, index) => (\r\n          <p key={index}>\r\n            This is additional content to enable scrolling on the page. Scroll down to see more.\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Include the updated CSS */}\r\n      <style jsx>{`\r\n        /* Ensure the html and body elements allow scrolling */\r\n        html, body {\r\n          height: 100%;\r\n          margin: 0;\r\n          padding: 0;\r\n          overflow-x: hidden; /* Prevent horizontal scrolling */\r\n          overflow-y: scroll; /* Always show vertical scrollbar */\r\n          scroll-behavior: smooth; /* Enables smooth scrolling */\r\n        }\r\n\r\n        .portal-container {\r\n          border: 1px solid #ccc;\r\n          padding: 30px;\r\n          width: 400px;\r\n          margin: 50px auto;\r\n          text-align: center;\r\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n          border-radius: 8px;\r\n          animation: fadeIn 1.5s ease-in-out;\r\n          /* Removed any fixed height to allow natural expansion */\r\n        }\r\n\r\n        .form-group {\r\n          margin-bottom: 15px;\r\n          text-align: left;\r\n        }\r\n\r\n        label {\r\n          display: block;\r\n          margin-bottom: 5px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        input[type=\"text\"] {\r\n          padding: 8px;\r\n          width: 100%;\r\n          margin-bottom: 10px;\r\n          border-radius: 4px;\r\n          border: 1px solid #ccc;\r\n          animation: slideIn 1s ease-in-out;\r\n        }\r\n\r\n        button {\r\n          background: #007bff;\r\n          color: white;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n          animation: slideIn 1.5s ease-in-out;\r\n        }\r\n\r\n        button:disabled {\r\n          background-color: #ccc;\r\n          cursor: not-allowed;\r\n        }\r\n\r\n        button:hover:not(:disabled) {\r\n          background: #0056b3;\r\n          transform: scale(1.05);\r\n        }\r\n\r\n        footer {\r\n          margin-top: 40px;\r\n          text-align: center;\r\n          color: #555;\r\n        }\r\n\r\n        .scroll-to-top {\r\n          position: fixed;\r\n          bottom: 20px;\r\n          right: 20px;\r\n          padding: 10px 15px;\r\n          background-color: #046a38;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 50%;\r\n          cursor: pointer;\r\n          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\r\n          font-size: 18px;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .scroll-to-top:hover {\r\n          background-color: #035529;\r\n        }\r\n\r\n        /* Responsive Design Enhancements */\r\n        @media (max-width: 768px) {\r\n          .portal-container {\r\n            width: 90%; /* Make the container width responsive */\r\n            padding: 20px; /* Adjust padding for smaller screens */\r\n            margin: 20px auto; /* Reduce margin on smaller screens */\r\n          }\r\n\r\n          .scroll-to-top {\r\n            padding: 8px 12px;\r\n            font-size: 16px;\r\n          }\r\n        }\r\n\r\n        @keyframes fadeIn {\r\n          0% { opacity: 0; transform: translateY(-20px); }\r\n          100% { opacity: 1; transform: translateY(0); }\r\n        }\r\n\r\n        @keyframes slideIn {\r\n          0% { opacity: 0; transform: translateY(30px); }\r\n          100% { opacity: 1; transform: translateY(0); }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}