{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\components\\\\Portal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport Captcha from './captcha';\n\n// Constants for normalization and threshold adjustments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\n\nconst Portal = () => {\n  _s();\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    keyHoldTime: 0,\n    errorRate: 0,\n    sessionDuration: 0,\n    pageNavigationPattern: [],\n    averageDwellTime: 0,\n    scrollBehavior: 0\n  });\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\n  const [keyHoldDurations, setKeyHoldDurations] = useState([]);\n  const keyDownTimes = useRef({});\n  const lastKeyPressTimeRef = useRef(null);\n  const [navigationEvents, setNavigationEvents] = useState([]);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const sessionStartRef = useRef(performance.now());\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\n  const lastCursorPositionRef = useRef({\n    x: null,\n    y: null,\n    time: null\n  });\n  const lastScrollPositionRef = useRef(window.scrollY);\n  const lastFocusTimeRef = useRef(null);\n  const aadhaarInputRef = useRef(null);\n  useEffect(() => {\n    let mouseMoveEvents = [];\n    const trackMouseMovement = event => {\n      const currentTime = performance.now();\n      const lastCursorPosition = lastCursorPositionRef.current;\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\n            acceleration = MAX_HUMAN_ACCELERATION;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Compute moving average of speed and acceleration\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n\n          // Calculate straight-line distance between last position and current position\n          const straightLineDistance = Math.sqrt((event.clientX - lastCursorPosition.x) ** 2 + (event.clientY - lastCursorPosition.y) ** 2);\n\n          // Calculate path deviation as the difference between actual distance and straight-line distance\n          const deviation = Math.abs(distance - straightLineDistance);\n\n          // Update jitter\n          const movement = Math.sqrt(dx * dx + dy * dy);\n          const isJitter = movement < 2; // Threshold can be adjusted\n\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: avgSpeed,\n            cursorAcceleration: avgAcceleration,\n            pathDeviation: prevData.pathDeviation > 0 ? (prevData.pathDeviation + deviation) / 2 : deviation,\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter\n          }));\n        }\n      }\n      lastCursorPositionRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTimeRef.current = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTimeRef.current = performance.now();\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\n      if (delta > 0) {\n        setScrollDistance(prev => prev + delta);\n        lastInteractionTimeRef.current = performance.now();\n      }\n      lastScrollPositionRef.current = newScrollPosition;\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n        // Do not reset lastInteractionTime here\n      }\n      // Do not reset lastInteractionTime\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    window.addEventListener('scroll', handleScroll);\n    const idleInterval = setInterval(calculateIdleTime, 5000);\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      window.removeEventListener('scroll', handleScroll);\n      clearInterval(idleInterval);\n    };\n  }, [interactionData.avgCursorSpeed]);\n  const handleFocus = () => {\n    lastFocusTimeRef.current = performance.now();\n  };\n  const handleBlur = () => {\n    if (lastFocusTimeRef.current) {\n      const dwellTime = performance.now() - lastFocusTimeRef.current;\n      setDwellTimes(prevTimes => [...prevTimes, dwellTime]);\n      lastFocusTimeRef.current = null;\n    }\n  };\n  const handleKeyDown = event => {\n    if (!keyDownTimes.current[event.code]) {\n      keyDownTimes.current[event.code] = performance.now();\n\n      // Calculate key transition time\n      const currentTime = performance.now();\n      if (lastKeyPressTimeRef.current) {\n        const transitionTime = currentTime - lastKeyPressTimeRef.current;\n        setKeyTransitionTimes(prevTimes => [...prevTimes, transitionTime]);\n      }\n      lastKeyPressTimeRef.current = currentTime;\n      lastInteractionTimeRef.current = currentTime;\n    }\n  };\n  const handleKeyUp = event => {\n    if (keyDownTimes.current[event.code]) {\n      const holdDuration = performance.now() - keyDownTimes.current[event.code];\n      setKeyHoldDurations(prevDurations => [...prevDurations, holdDuration]);\n      delete keyDownTimes.current[event.code];\n\n      // Record keystroke duration (key press duration)\n      setKeystrokeDurations(prevDurations => [...prevDurations, holdDuration]);\n      if (event.key === 'Backspace' || event.key === 'Delete') {\n        setErrorCount(prev => prev + 1); // Count as an error\n      }\n    }\n  };\n  const handleAadhaarChange = e => {\n    const value = e.target.value.replace(/\\s+/g, '');\n    if (/^\\d{0,12}$/.test(value)) {\n      setAadhaarNumber(value);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\n    }\n  };\n  const handleLogin = () => {\n    if (aadhaarNumber.length === 12) {\n      // Calculate session duration\n      const currentTime = performance.now();\n      const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\n\n      // Compute averages\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\n      const averageKeyPressDuration = keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\n      const typingSpeed = sessionDuration > 0 ? (keystrokeDurations.length / (sessionDuration / 60)).toFixed(2) : 0; // chars per minute\n\n      const averageKeyTransitionTime = keyTransitionTimes.length > 0 ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length : 0;\n      const averageKeyHoldTime = keyHoldDurations.length > 0 ? keyHoldDurations.reduce((sum, time) => sum + time, 0) / keyHoldDurations.length : 0;\n      const averageDwellTime = dwellTimes.length > 0 ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length : 0;\n      const errorRate = keystrokeDurations.length > 0 ? (errorCount / keystrokeDurations.length * 100).toFixed(2) : 0;\n      const formattedData = {\n        avgCursorSpeed: interactionData.avgCursorSpeed ? interactionData.avgCursorSpeed.toFixed(2) : 0,\n        cursorAcceleration: interactionData.cursorAcceleration ? interactionData.cursorAcceleration.toFixed(2) : 0,\n        pathDeviation: interactionData.pathDeviation ? interactionData.pathDeviation.toFixed(2) : 0,\n        idleTime: idleTime.toFixed(2),\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\n        clickPattern: clickCount,\n        typingSpeed,\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\n        keyTransitionTime: averageKeyTransitionTime.toFixed(2),\n        keyHoldTime: averageKeyHoldTime.toFixed(2),\n        errorRate,\n        sessionDuration: sessionDuration.toFixed(2),\n        pageNavigationPattern: JSON.stringify(navigationEvents),\n        averageDwellTime: averageDwellTime.toFixed(2),\n        scrollBehavior: scrollDistance.toFixed(2)\n      };\n      downloadCSV(formattedData);\n      alert('Login successful!');\n    } else {\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\n    }\n  };\n  const downloadCSV = data => {\n    const headers = Object.keys(data).join(',');\n    const values = Object.values(data).join(',');\n    const csvContent = `${headers}\\n${values}`;\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'interaction_data.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aadhaarNumber\",\n        children: \"Aadhaar Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aadhaarNumber\",\n        ref: aadhaarInputRef,\n        value: aadhaarNumber,\n        onChange: handleAadhaarChange,\n        placeholder: \"Enter your 12-digit Aadhaar number\",\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), showCaptcha && /*#__PURE__*/_jsxDEV(Captcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginButton\",\n      onClick: handleLogin,\n      disabled: aadhaarNumber.length !== 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"5AM6B2PlHA3Db7lzN9aP+SPfgM0=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Captcha","jsxDEV","_jsxDEV","AVERAGE_DPI","DPI_NORMALIZATION_FACTOR","MAX_HUMAN_ACCELERATION","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","keyHoldTime","errorRate","sessionDuration","pageNavigationPattern","averageDwellTime","scrollBehavior","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","keyTransitionTimes","setKeyTransitionTimes","keyHoldDurations","setKeyHoldDurations","keyDownTimes","lastKeyPressTimeRef","navigationEvents","setNavigationEvents","showCaptcha","setShowCaptcha","sessionStartRef","performance","now","lastInteractionTimeRef","current","lastCursorPositionRef","x","y","time","lastScrollPositionRef","window","scrollY","lastFocusTimeRef","aadhaarInputRef","mouseMoveEvents","trackMouseMovement","event","currentTime","lastCursorPosition","dx","clientX","dy","clientY","distance","Math","sqrt","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","reduce","sum","e","length","avgAcceleration","straightLineDistance","deviation","abs","movement","isJitter","prevData","handleClick","prev","handleScroll","newScrollPosition","delta","calculateIdleTime","timeSinceLastInteraction","document","addEventListener","idleInterval","setInterval","removeEventListener","clearInterval","handleFocus","handleBlur","dwellTime","prevTimes","handleKeyDown","code","transitionTime","handleKeyUp","holdDuration","prevDurations","key","handleAadhaarChange","value","target","replace","test","handleLogin","totalKeyPressDuration","dur","averageKeyPressDuration","toFixed","averageKeyTransitionTime","averageKeyHoldTime","formattedData","JSON","stringify","downloadCSV","alert","data","headers","Object","keys","join","values","csvContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","ref","onChange","placeholder","onFocus","onBlur","onKeyDown","onKeyUp","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/components/Portal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './styles.css';\r\nimport Captcha from './captcha';\r\n\r\n// Constants for normalization and threshold adjustments\r\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\r\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\r\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\r\n\r\nconst Portal = () => {\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    keyHoldTime: 0,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    pageNavigationPattern: [],\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\r\n  const [keyHoldDurations, setKeyHoldDurations] = useState([]);\r\n  const keyDownTimes = useRef({});\r\n  const lastKeyPressTimeRef = useRef(null);\r\n  const [navigationEvents, setNavigationEvents] = useState([]);\r\n  const [showCaptcha, setShowCaptcha] = useState(false);\r\n  const sessionStartRef = useRef(performance.now());\r\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\r\n  const lastCursorPositionRef = useRef({ x: null, y: null, time: null });\r\n  const lastScrollPositionRef = useRef(window.scrollY);\r\n  const lastFocusTimeRef = useRef(null);\r\n\r\n  const aadhaarInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = performance.now();\r\n      const lastCursorPosition = lastCursorPositionRef.current;\r\n\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\r\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\r\n            acceleration = MAX_HUMAN_ACCELERATION;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Compute moving average of speed and acceleration\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          // Calculate straight-line distance between last position and current position\r\n          const straightLineDistance = Math.sqrt(\r\n            (event.clientX - lastCursorPosition.x) ** 2 +\r\n            (event.clientY - lastCursorPosition.y) ** 2\r\n          );\r\n\r\n          // Calculate path deviation as the difference between actual distance and straight-line distance\r\n          const deviation = Math.abs(distance - straightLineDistance);\r\n\r\n          // Update jitter\r\n          const movement = Math.sqrt(dx * dx + dy * dy);\r\n          const isJitter = movement < 2; // Threshold can be adjusted\r\n\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: avgSpeed,\r\n            cursorAcceleration: avgAcceleration,\r\n            pathDeviation:\r\n              prevData.pathDeviation > 0\r\n                ? (prevData.pathDeviation + deviation) / 2\r\n                : deviation,\r\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPositionRef.current = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTimeRef.current = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTimeRef.current = performance.now();\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\r\n      if (delta > 0) {\r\n        setScrollDistance((prev) => prev + delta);\r\n        lastInteractionTimeRef.current = performance.now();\r\n      }\r\n      lastScrollPositionRef.current = newScrollPosition;\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n        // Do not reset lastInteractionTime here\r\n      }\r\n      // Do not reset lastInteractionTime\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 5000);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      clearInterval(idleInterval);\r\n    };\r\n  }, [interactionData.avgCursorSpeed]);\r\n\r\n  const handleFocus = () => {\r\n    lastFocusTimeRef.current = performance.now();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (lastFocusTimeRef.current) {\r\n      const dwellTime = performance.now() - lastFocusTimeRef.current;\r\n      setDwellTimes((prevTimes) => [...prevTimes, dwellTime]);\r\n      lastFocusTimeRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!keyDownTimes.current[event.code]) {\r\n      keyDownTimes.current[event.code] = performance.now();\r\n\r\n      // Calculate key transition time\r\n      const currentTime = performance.now();\r\n      if (lastKeyPressTimeRef.current) {\r\n        const transitionTime = currentTime - lastKeyPressTimeRef.current;\r\n        setKeyTransitionTimes((prevTimes) => [...prevTimes, transitionTime]);\r\n      }\r\n      lastKeyPressTimeRef.current = currentTime;\r\n      lastInteractionTimeRef.current = currentTime;\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (keyDownTimes.current[event.code]) {\r\n      const holdDuration = performance.now() - keyDownTimes.current[event.code];\r\n      setKeyHoldDurations((prevDurations) => [...prevDurations, holdDuration]);\r\n      delete keyDownTimes.current[event.code];\r\n\r\n      // Record keystroke duration (key press duration)\r\n      setKeystrokeDurations((prevDurations) => [...prevDurations, holdDuration]);\r\n\r\n      if (event.key === 'Backspace' || event.key === 'Delete') {\r\n        setErrorCount((prev) => prev + 1); // Count as an error\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAadhaarChange = (e) => {\r\n    const value = e.target.value.replace(/\\s+/g, '');\r\n    if (/^\\d{0,12}$/.test(value)) {\r\n      setAadhaarNumber(value);\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (aadhaarNumber.length === 12) {\r\n      // Calculate session duration\r\n      const currentTime = performance.now();\r\n      const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\r\n\r\n      // Compute averages\r\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\r\n      const averageKeyPressDuration =\r\n        keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\r\n\r\n      const typingSpeed =\r\n        sessionDuration > 0\r\n          ? ((keystrokeDurations.length / (sessionDuration / 60)).toFixed(2))\r\n          : 0; // chars per minute\r\n\r\n      const averageKeyTransitionTime =\r\n        keyTransitionTimes.length > 0\r\n          ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length\r\n          : 0;\r\n\r\n      const averageKeyHoldTime =\r\n        keyHoldDurations.length > 0\r\n          ? keyHoldDurations.reduce((sum, time) => sum + time, 0) / keyHoldDurations.length\r\n          : 0;\r\n\r\n      const averageDwellTime =\r\n        dwellTimes.length > 0\r\n          ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length\r\n          : 0;\r\n\r\n      const errorRate =\r\n        keystrokeDurations.length > 0\r\n          ? ((errorCount / keystrokeDurations.length) * 100).toFixed(2)\r\n          : 0;\r\n\r\n      const formattedData = {\r\n        avgCursorSpeed: interactionData.avgCursorSpeed\r\n          ? interactionData.avgCursorSpeed.toFixed(2)\r\n          : 0,\r\n        cursorAcceleration: interactionData.cursorAcceleration\r\n          ? interactionData.cursorAcceleration.toFixed(2)\r\n          : 0,\r\n        pathDeviation: interactionData.pathDeviation\r\n          ? interactionData.pathDeviation.toFixed(2)\r\n          : 0,\r\n        idleTime: idleTime.toFixed(2),\r\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\r\n        clickPattern: clickCount,\r\n        typingSpeed,\r\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\r\n        keyTransitionTime: averageKeyTransitionTime.toFixed(2),\r\n        keyHoldTime: averageKeyHoldTime.toFixed(2),\r\n        errorRate,\r\n        sessionDuration: sessionDuration.toFixed(2),\r\n        pageNavigationPattern: JSON.stringify(navigationEvents),\r\n        averageDwellTime: averageDwellTime.toFixed(2),\r\n        scrollBehavior: scrollDistance.toFixed(2),\r\n      };\r\n\r\n      downloadCSV(formattedData);\r\n\r\n      alert('Login successful!');\r\n    } else {\r\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\r\n    }\r\n  };\r\n\r\n  const downloadCSV = (data) => {\r\n    const headers = Object.keys(data).join(',');\r\n    const values = Object.values(data).join(',');\r\n\r\n    const csvContent = `${headers}\\n${values}`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'interaction_data.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"aadhaarNumber\">Aadhaar Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"aadhaarNumber\"\r\n          ref={aadhaarInputRef}\r\n          value={aadhaarNumber}\r\n          onChange={handleAadhaarChange}\r\n          placeholder=\"Enter your 12-digit Aadhaar number\"\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n          onKeyUp={handleKeyUp}\r\n        />\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n      {showCaptcha && <Captcha />}\r\n      <button id=\"loginButton\" onClick={handleLogin} disabled={aadhaarNumber.length !== 12}>\r\n        Login\r\n      </button>\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}