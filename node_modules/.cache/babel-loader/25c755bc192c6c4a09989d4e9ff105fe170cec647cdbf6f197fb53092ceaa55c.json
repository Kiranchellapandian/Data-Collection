{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\components\\\\Portal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport Captcha from './captcha';\n\n// Constants for normalization and threshold adjustments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\nconst BOT_SCORE_THRESHOLD = 70; // Threshold for bot detection (0-100 scale)\n\nconst Portal = () => {\n  _s();\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    keyHoldTime: 0,\n    errorRate: 0,\n    sessionDuration: 0,\n    pageNavigationPattern: [],\n    averageDwellTime: 0,\n    scrollBehavior: 0\n  });\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [botScore, setBotScore] = useState(0);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const sessionStart = performance.now();\n  let lastInteractionTime = sessionStart;\n  let lastCursorPosition = {\n    x: null,\n    y: null,\n    time: null\n  };\n  let lastKeyPressTime = null;\n  let lastScrollPosition = window.scrollY;\n  useEffect(() => {\n    let mouseMoveEvents = [];\n    let keyPressEvents = [];\n    const trackMouseMovement = event => {\n      const currentTime = performance.now();\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\n            acceleration = MAX_HUMAN_ACCELERATION;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Compute moving average of speed and acceleration\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: avgSpeed,\n            cursorAcceleration: avgAcceleration\n          }));\n        }\n      }\n      lastCursorPosition = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTime = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTime = performance.now();\n    };\n    const handleKeyPress = event => {\n      const currentTime = performance.now();\n      if (lastKeyPressTime) {\n        const duration = currentTime - lastKeyPressTime;\n        setKeystrokeDurations(prevDurations => [...prevDurations, duration]);\n        keyPressEvents.push({\n          duration,\n          time: currentTime\n        });\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n          setErrorCount(prev => prev + 1); // Count as an error\n        }\n      }\n      lastKeyPressTime = currentTime;\n      lastInteractionTime = currentTime;\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      setScrollDistance(prev => prev + Math.abs(newScrollPosition - lastScrollPosition));\n      lastScrollPosition = newScrollPosition;\n      lastInteractionTime = performance.now();\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTime) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n      }\n      lastInteractionTime = currentTime;\n    };\n    const analyzeInteractionData = () => {\n      // Advanced analysis to compute bot score\n      let score = 0;\n\n      // Example heuristics for scoring\n      if (interactionData.avgCursorSpeed > 1000) score += 20;\n      if (interactionData.cursorAcceleration > 30000) score += 20;\n      if (idleTime < 2) score += 10;\n      if (keystrokeDurations.length > 0) {\n        const avgKeystrokeDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0) / keystrokeDurations.length;\n        if (avgKeystrokeDuration < 50) score += 20; // Typing too fast\n      }\n      if (clickCount > 20) score += 10;\n      if (scrollDistance === 0) score += 10;\n      setBotScore(score);\n      if (score >= BOT_SCORE_THRESHOLD) {\n        setShowCaptcha(true);\n      }\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    document.addEventListener('keydown', handleKeyPress);\n    window.addEventListener('scroll', handleScroll);\n    const idleInterval = setInterval(calculateIdleTime, 5000);\n    const analysisInterval = setInterval(analyzeInteractionData, 10000);\n    const handleBeforeUnload = () => {\n      const currentTime = performance.now();\n      const sessionDuration = (currentTime - sessionStart) / 1000; // in seconds\n\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\n      const averageKeyPressDuration = keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\n      const typingSpeed = sessionDuration > 0 ? (keystrokeDurations.length / (sessionDuration / 60)).toFixed(2) : 0; // chars per minute\n\n      const formattedData = {\n        avgCursorSpeed: interactionData.avgCursorSpeed ? interactionData.avgCursorSpeed.toFixed(2) : 0,\n        cursorAcceleration: interactionData.cursorAcceleration ? interactionData.cursorAcceleration.toFixed(2) : 0,\n        pathDeviation: interactionData.pathDeviation ? interactionData.pathDeviation.toFixed(2) : 0,\n        idleTime: idleTime.toFixed(2),\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\n        clickPattern: clickCount,\n        typingSpeed,\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\n        keyTransitionTime: '0',\n        // Placeholder\n        keyHoldTime: averageKeyPressDuration.toFixed(2),\n        errorRate: keystrokeDurations.length > 0 ? (errorCount / keystrokeDurations.length * 100).toFixed(2) : 0,\n        sessionDuration: sessionDuration.toFixed(2),\n        pageNavigationPattern: JSON.stringify(interactionData.pageNavigationPattern || []),\n        averageDwellTime: dwellTimes.length > 0 ? (dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length).toFixed(2) : 0,\n        scrollBehavior: scrollDistance.toFixed(2),\n        botScore: botScore.toFixed(2)\n      };\n      downloadCSV(formattedData);\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('keydown', handleKeyPress);\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      clearInterval(idleInterval);\n      clearInterval(analysisInterval);\n    };\n  }, [clickCount, keystrokeDurations, scrollDistance, idleTime, sessionStart, interactionData, errorCount, dwellTimes, botScore]);\n  const downloadCSV = data => {\n    const headers = Object.keys(data).join(',');\n    const values = Object.values(data).join(',');\n    const csvContent = `${headers}\\n${values}`;\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'interaction_data.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const handleAadhaarChange = e => {\n    const value = e.target.value.replace(/\\s+/g, '');\n    if (/^\\d{0,12}$/.test(value)) {\n      setAadhaarNumber(value);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\n    }\n  };\n  const handleLogin = () => {\n    if (aadhaarNumber.length === 12) {\n      alert('Login successful!');\n    } else {\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aadhaarNumber\",\n        children: \"Aadhaar Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aadhaarNumber\",\n        value: aadhaarNumber,\n        onChange: handleAadhaarChange,\n        placeholder: \"Enter your 12-digit Aadhaar number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), showCaptcha && /*#__PURE__*/_jsxDEV(Captcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginButton\",\n      onClick: handleLogin,\n      disabled: aadhaarNumber.length !== 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"JBhfraB171AxPcaxIpID702TpaE=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","Captcha","jsxDEV","_jsxDEV","AVERAGE_DPI","DPI_NORMALIZATION_FACTOR","MAX_HUMAN_ACCELERATION","BOT_SCORE_THRESHOLD","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","keyHoldTime","errorRate","sessionDuration","pageNavigationPattern","averageDwellTime","scrollBehavior","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","botScore","setBotScore","showCaptcha","setShowCaptcha","sessionStart","performance","now","lastInteractionTime","lastCursorPosition","x","y","time","lastKeyPressTime","lastScrollPosition","window","scrollY","mouseMoveEvents","keyPressEvents","trackMouseMovement","event","currentTime","dx","clientX","dy","clientY","distance","Math","sqrt","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","reduce","sum","e","length","avgAcceleration","prevData","handleClick","prev","handleKeyPress","duration","prevDurations","key","handleScroll","newScrollPosition","abs","calculateIdleTime","timeSinceLastInteraction","analyzeInteractionData","score","avgKeystrokeDuration","dur","document","addEventListener","idleInterval","setInterval","analysisInterval","handleBeforeUnload","totalKeyPressDuration","averageKeyPressDuration","toFixed","formattedData","JSON","stringify","downloadCSV","removeEventListener","clearInterval","data","headers","Object","keys","join","values","csvContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleAadhaarChange","value","target","replace","test","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/components/Portal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css';\r\nimport Captcha from './captcha';\r\n\r\n// Constants for normalization and threshold adjustments\r\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\r\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\r\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\r\nconst BOT_SCORE_THRESHOLD = 70; // Threshold for bot detection (0-100 scale)\r\n\r\nconst Portal = () => {\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    keyHoldTime: 0,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    pageNavigationPattern: [],\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [botScore, setBotScore] = useState(0);\r\n  const [showCaptcha, setShowCaptcha] = useState(false);\r\n  const sessionStart = performance.now();\r\n  let lastInteractionTime = sessionStart;\r\n  let lastCursorPosition = { x: null, y: null, time: null };\r\n  let lastKeyPressTime = null;\r\n  let lastScrollPosition = window.scrollY;\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n    let keyPressEvents = [];\r\n\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = performance.now();\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\r\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\r\n            acceleration = MAX_HUMAN_ACCELERATION;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Compute moving average of speed and acceleration\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: avgSpeed,\r\n            cursorAcceleration: avgAcceleration,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPosition = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTime = performance.now();\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n      const currentTime = performance.now();\r\n      if (lastKeyPressTime) {\r\n        const duration = currentTime - lastKeyPressTime;\r\n        setKeystrokeDurations((prevDurations) => [...prevDurations, duration]);\r\n\r\n        keyPressEvents.push({\r\n          duration,\r\n          time: currentTime,\r\n        });\r\n\r\n        if (event.key === 'Backspace' || event.key === 'Delete') {\r\n          setErrorCount((prev) => prev + 1); // Count as an error\r\n        }\r\n      }\r\n      lastKeyPressTime = currentTime;\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      setScrollDistance((prev) => prev + Math.abs(newScrollPosition - lastScrollPosition));\r\n      lastScrollPosition = newScrollPosition;\r\n      lastInteractionTime = performance.now();\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTime) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n      }\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const analyzeInteractionData = () => {\r\n      // Advanced analysis to compute bot score\r\n      let score = 0;\r\n\r\n      // Example heuristics for scoring\r\n      if (interactionData.avgCursorSpeed > 1000) score += 20;\r\n      if (interactionData.cursorAcceleration > 30000) score += 20;\r\n      if (idleTime < 2) score += 10;\r\n      if (keystrokeDurations.length > 0) {\r\n        const avgKeystrokeDuration =\r\n          keystrokeDurations.reduce((sum, dur) => sum + dur, 0) / keystrokeDurations.length;\r\n        if (avgKeystrokeDuration < 50) score += 20; // Typing too fast\r\n      }\r\n      if (clickCount > 20) score += 10;\r\n      if (scrollDistance === 0) score += 10;\r\n\r\n      setBotScore(score);\r\n\r\n      if (score >= BOT_SCORE_THRESHOLD) {\r\n        setShowCaptcha(true);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 5000);\r\n    const analysisInterval = setInterval(analyzeInteractionData, 10000);\r\n\r\n    const handleBeforeUnload = () => {\r\n      const currentTime = performance.now();\r\n      const sessionDuration = (currentTime - sessionStart) / 1000; // in seconds\r\n\r\n      const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\r\n      const averageKeyPressDuration =\r\n        keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\r\n\r\n      const typingSpeed =\r\n        sessionDuration > 0\r\n          ? ((keystrokeDurations.length / (sessionDuration / 60)).toFixed(2))\r\n          : 0; // chars per minute\r\n\r\n      const formattedData = {\r\n        avgCursorSpeed: interactionData.avgCursorSpeed\r\n          ? interactionData.avgCursorSpeed.toFixed(2)\r\n          : 0,\r\n        cursorAcceleration: interactionData.cursorAcceleration\r\n          ? interactionData.cursorAcceleration.toFixed(2)\r\n          : 0,\r\n        pathDeviation: interactionData.pathDeviation\r\n          ? interactionData.pathDeviation.toFixed(2)\r\n          : 0,\r\n        idleTime: idleTime.toFixed(2),\r\n        jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\r\n        clickPattern: clickCount,\r\n        typingSpeed,\r\n        keyPressDuration: averageKeyPressDuration.toFixed(2),\r\n        keyTransitionTime: '0', // Placeholder\r\n        keyHoldTime: averageKeyPressDuration.toFixed(2),\r\n        errorRate:\r\n          keystrokeDurations.length > 0\r\n            ? ((errorCount / keystrokeDurations.length) * 100).toFixed(2)\r\n            : 0,\r\n        sessionDuration: sessionDuration.toFixed(2),\r\n        pageNavigationPattern: JSON.stringify(interactionData.pageNavigationPattern || []),\r\n        averageDwellTime:\r\n          dwellTimes.length > 0\r\n            ? (dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length).toFixed(2)\r\n            : 0,\r\n        scrollBehavior: scrollDistance.toFixed(2),\r\n        botScore: botScore.toFixed(2),\r\n      };\r\n\r\n      downloadCSV(formattedData);\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      clearInterval(idleInterval);\r\n      clearInterval(analysisInterval);\r\n    };\r\n  }, [\r\n    clickCount,\r\n    keystrokeDurations,\r\n    scrollDistance,\r\n    idleTime,\r\n    sessionStart,\r\n    interactionData,\r\n    errorCount,\r\n    dwellTimes,\r\n    botScore,\r\n  ]);\r\n\r\n  const downloadCSV = (data) => {\r\n    const headers = Object.keys(data).join(',');\r\n    const values = Object.values(data).join(',');\r\n\r\n    const csvContent = `${headers}\\n${values}`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'interaction_data.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleAadhaarChange = (e) => {\r\n    const value = e.target.value.replace(/\\s+/g, '');\r\n    if (/^\\d{0,12}$/.test(value)) {\r\n      setAadhaarNumber(value);\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (aadhaarNumber.length === 12) {\r\n      alert('Login successful!');\r\n    } else {\r\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"aadhaarNumber\">Aadhaar Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"aadhaarNumber\"\r\n          value={aadhaarNumber}\r\n          onChange={handleAadhaarChange}\r\n          placeholder=\"Enter your 12-digit Aadhaar number\"\r\n        />\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n      {showCaptcha && <Captcha />}\r\n      <button id=\"loginButton\" onClick={handleLogin} disabled={aadhaarNumber.length !== 12}>\r\n        Login\r\n      </button>\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}