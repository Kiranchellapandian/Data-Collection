{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\Portal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './components/styles.css';\nimport Captcha from './components/captcha';\n\n// Constants for normalization and threshold adjustments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\n\nconst Portal = () => {\n  _s();\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    errorRate: 0,\n    sessionDuration: 0,\n    pageNavigationPattern: [],\n    averageDwellTime: 0,\n    scrollBehavior: 0\n  });\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\n  const keyDownTimes = useRef({});\n  const lastKeyDownTimeRef = useRef(null);\n  const [navigationEvents, setNavigationEvents] = useState([]);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const sessionStartRef = useRef(performance.now());\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\n  const lastCursorPositionRef = useRef({\n    x: null,\n    y: null,\n    time: null\n  });\n  const lastScrollPositionRef = useRef(window.scrollY);\n  const lastFocusTimeRef = useRef(null);\n\n  // Utility function to calculate standard deviation\n  const calculateStandardDeviation = values => {\n    const n = values.length;\n    if (n === 0) return 0;\n    const mean = values.reduce((a, b) => a + b, 0) / n;\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\n    return Math.sqrt(variance);\n  };\n  useEffect(() => {\n    let mouseMoveEvents = [];\n    const trackMouseMovement = event => {\n      const currentTime = performance.now();\n      const lastCursorPosition = lastCursorPositionRef.current;\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\n            acceleration = MAX_HUMAN_ACCELERATION;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Compute moving average of speed and acceleration\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n\n          // Calculate straight-line distance between last position and current position\n          const straightLineDistance = Math.sqrt((event.clientX - lastCursorPosition.x) ** 2 + (event.clientY - lastCursorPosition.y) ** 2);\n\n          // Calculate path deviation as the difference between actual distance and straight-line distance\n          const deviation = Math.abs(distance - straightLineDistance);\n\n          // Update jitter\n          const movement = Math.sqrt(dx * dx + dy * dy);\n          const isJitter = movement < 2; // Threshold can be adjusted\n\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: avgSpeed,\n            cursorAcceleration: avgAcceleration,\n            pathDeviation: prevData.pathDeviation > 0 ? (prevData.pathDeviation + deviation) / 2 : deviation,\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter\n          }));\n        }\n      }\n      lastCursorPositionRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTimeRef.current = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTimeRef.current = performance.now();\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\n      if (delta > 0) {\n        setScrollDistance(prev => prev + delta);\n        lastInteractionTimeRef.current = performance.now();\n      }\n      lastScrollPositionRef.current = newScrollPosition;\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\n      }\n    };\n\n    // Key event handlers\n    const handleKeyDown = event => {\n      const currentTime = performance.now();\n      if (!keyDownTimes.current[event.code]) {\n        keyDownTimes.current[event.code] = currentTime;\n\n        // Calculate key transition time\n        if (lastKeyDownTimeRef.current !== null) {\n          const transitionTime = currentTime - lastKeyDownTimeRef.current;\n          setKeyTransitionTimes(prevTimes => [...prevTimes, transitionTime]);\n        }\n        lastKeyDownTimeRef.current = currentTime;\n        lastInteractionTimeRef.current = currentTime;\n      }\n    };\n    const handleKeyUp = event => {\n      const currentTime = performance.now();\n      if (keyDownTimes.current[event.code]) {\n        const keyPressDuration = currentTime - keyDownTimes.current[event.code];\n        // Record keystroke duration (key press duration)\n        setKeystrokeDurations(prevDurations => [...prevDurations, keyPressDuration]);\n        delete keyDownTimes.current[event.code];\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n          setErrorCount(prev => prev + 1); // Count as an error\n        }\n      }\n    };\n    const handleFocusIn = event => {\n      const target = event.target;\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        target.addEventListener('keydown', handleKeyDown);\n        target.addEventListener('keyup', handleKeyUp);\n        lastFocusTimeRef.current = performance.now();\n      }\n    };\n    const handleFocusOut = event => {\n      const target = event.target;\n      if (lastFocusTimeRef.current) {\n        const dwellTime = performance.now() - lastFocusTimeRef.current;\n        setDwellTimes(prevTimes => [...prevTimes, dwellTime]);\n        lastFocusTimeRef.current = null;\n      }\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        target.removeEventListener('keydown', handleKeyDown);\n        target.removeEventListener('keyup', handleKeyUp);\n      }\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    window.addEventListener('scroll', handleScroll);\n    document.addEventListener('focusin', handleFocusIn);\n    document.addEventListener('focusout', handleFocusOut);\n    const idleInterval = setInterval(calculateIdleTime, 5000);\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      window.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('focusin', handleFocusIn);\n      document.removeEventListener('focusout', handleFocusOut);\n      clearInterval(idleInterval);\n    };\n  }, [interactionData.avgCursorSpeed]);\n  const handleAadhaarChange = e => {\n    const value = e.target.value.replace(/\\s+/g, '');\n    if (/^\\d{0,12}$/.test(value)) {\n      setAadhaarNumber(value);\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\n    }\n  };\n  const handleLogin = () => {\n    // Calculate session duration\n    const currentTime = performance.now();\n    const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\n\n    // Compute averages\n    const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\n    const averageKeyPressDuration = keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\n    const typingSpeed = sessionDuration > 0 ? (keystrokeDurations.length / (sessionDuration / 60)).toFixed(2) : 0; // chars per minute\n\n    const averageKeyTransitionTime = keyTransitionTimes.length > 0 ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length : 0;\n    const keyTransitionStdDev = calculateStandardDeviation(keyTransitionTimes);\n    const averageDwellTime = dwellTimes.length > 0 ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length : 0;\n    const errorRate = keystrokeDurations.length > 0 ? (errorCount / keystrokeDurations.length * 100).toFixed(2) : 0;\n    const formattedData = {\n      avgCursorSpeed: interactionData.avgCursorSpeed ? interactionData.avgCursorSpeed.toFixed(2) : 0,\n      cursorAcceleration: interactionData.cursorAcceleration ? interactionData.cursorAcceleration.toFixed(2) : 0,\n      pathDeviation: interactionData.pathDeviation ? interactionData.pathDeviation.toFixed(2) : 0,\n      idleTime: idleTime.toFixed(2),\n      jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\n      clickPattern: clickCount,\n      typingSpeed,\n      keyPressDuration: averageKeyPressDuration.toFixed(2),\n      keyTransitionTime: averageKeyTransitionTime.toFixed(2),\n      keyTransitionStdDev: keyTransitionStdDev.toFixed(2),\n      errorRate,\n      sessionDuration: sessionDuration.toFixed(2),\n      pageNavigationPattern: JSON.stringify(navigationEvents),\n      averageDwellTime: averageDwellTime.toFixed(2),\n      scrollBehavior: scrollDistance.toFixed(2)\n    };\n    downloadCSV(formattedData);\n    if (aadhaarNumber.length === 12) {\n      alert('Login successful!');\n    } else {\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\n    }\n  };\n  const downloadCSV = data => {\n    const headers = Object.keys(data).join(',');\n    const values = Object.values(data).join(',');\n    const csvContent = `${headers}\\n${values}`;\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'interaction_data.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"aadhaarNumber\",\n        children: \"Aadhaar Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"aadhaarNumber\",\n        value: aadhaarNumber,\n        onChange: handleAadhaarChange,\n        placeholder: \"Enter your 12-digit Aadhaar number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), showCaptcha && /*#__PURE__*/_jsxDEV(Captcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginButton\",\n      onClick: handleLogin,\n      disabled: aadhaarNumber.length !== 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"d3eDXPajNS88pk4zuR52RBSs04c=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Captcha","jsxDEV","_jsxDEV","AVERAGE_DPI","DPI_NORMALIZATION_FACTOR","MAX_HUMAN_ACCELERATION","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","errorRate","sessionDuration","pageNavigationPattern","averageDwellTime","scrollBehavior","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","keyTransitionTimes","setKeyTransitionTimes","keyDownTimes","lastKeyDownTimeRef","navigationEvents","setNavigationEvents","showCaptcha","setShowCaptcha","sessionStartRef","performance","now","lastInteractionTimeRef","current","lastCursorPositionRef","x","y","time","lastScrollPositionRef","window","scrollY","lastFocusTimeRef","calculateStandardDeviation","values","n","length","mean","reduce","a","b","variance","Math","sqrt","mouseMoveEvents","trackMouseMovement","event","currentTime","lastCursorPosition","dx","clientX","dy","clientY","distance","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","sum","e","avgAcceleration","straightLineDistance","deviation","abs","movement","isJitter","prevData","handleClick","prev","handleScroll","newScrollPosition","delta","calculateIdleTime","timeSinceLastInteraction","handleKeyDown","code","transitionTime","prevTimes","handleKeyUp","prevDurations","key","handleFocusIn","target","tagName","isContentEditable","addEventListener","handleFocusOut","dwellTime","removeEventListener","document","idleInterval","setInterval","clearInterval","handleAadhaarChange","value","replace","test","handleLogin","totalKeyPressDuration","dur","averageKeyPressDuration","toFixed","averageKeyTransitionTime","keyTransitionStdDev","formattedData","JSON","stringify","downloadCSV","alert","data","headers","Object","keys","join","csvContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/Portal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './components/styles.css';\r\nimport Captcha from './components/captcha';\r\n\r\n// Constants for normalization and threshold adjustments\r\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\r\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\r\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\r\n\r\nconst Portal = () => {\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    pageNavigationPattern: [],\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\r\n  const keyDownTimes = useRef({});\r\n  const lastKeyDownTimeRef = useRef(null);\r\n  const [navigationEvents, setNavigationEvents] = useState([]);\r\n  const [showCaptcha, setShowCaptcha] = useState(false);\r\n  const sessionStartRef = useRef(performance.now());\r\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\r\n  const lastCursorPositionRef = useRef({ x: null, y: null, time: null });\r\n  const lastScrollPositionRef = useRef(window.scrollY);\r\n  const lastFocusTimeRef = useRef(null);\r\n\r\n  // Utility function to calculate standard deviation\r\n  const calculateStandardDeviation = (values) => {\r\n    const n = values.length;\r\n    if (n === 0) return 0;\r\n    const mean = values.reduce((a, b) => a + b, 0) / n;\r\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\r\n    return Math.sqrt(variance);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = performance.now();\r\n      const lastCursorPosition = lastCursorPositionRef.current;\r\n\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\r\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\r\n            acceleration = MAX_HUMAN_ACCELERATION;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Compute moving average of speed and acceleration\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          // Calculate straight-line distance between last position and current position\r\n          const straightLineDistance = Math.sqrt(\r\n            (event.clientX - lastCursorPosition.x) ** 2 +\r\n            (event.clientY - lastCursorPosition.y) ** 2\r\n          );\r\n\r\n          // Calculate path deviation as the difference between actual distance and straight-line distance\r\n          const deviation = Math.abs(distance - straightLineDistance);\r\n\r\n          // Update jitter\r\n          const movement = Math.sqrt(dx * dx + dy * dy);\r\n          const isJitter = movement < 2; // Threshold can be adjusted\r\n\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: avgSpeed,\r\n            cursorAcceleration: avgAcceleration,\r\n            pathDeviation:\r\n              prevData.pathDeviation > 0\r\n                ? (prevData.pathDeviation + deviation) / 2\r\n                : deviation,\r\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPositionRef.current = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTimeRef.current = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTimeRef.current = performance.now();\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\r\n      if (delta > 0) {\r\n        setScrollDistance((prev) => prev + delta);\r\n        lastInteractionTimeRef.current = performance.now();\r\n      }\r\n      lastScrollPositionRef.current = newScrollPosition;\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\r\n      }\r\n    };\r\n\r\n    // Key event handlers\r\n    const handleKeyDown = (event) => {\r\n      const currentTime = performance.now();\r\n      if (!keyDownTimes.current[event.code]) {\r\n        keyDownTimes.current[event.code] = currentTime;\r\n\r\n        // Calculate key transition time\r\n        if (lastKeyDownTimeRef.current !== null) {\r\n          const transitionTime = currentTime - lastKeyDownTimeRef.current;\r\n          setKeyTransitionTimes((prevTimes) => [...prevTimes, transitionTime]);\r\n        }\r\n        lastKeyDownTimeRef.current = currentTime;\r\n        lastInteractionTimeRef.current = currentTime;\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event) => {\r\n      const currentTime = performance.now();\r\n      if (keyDownTimes.current[event.code]) {\r\n        const keyPressDuration = currentTime - keyDownTimes.current[event.code];\r\n        // Record keystroke duration (key press duration)\r\n        setKeystrokeDurations((prevDurations) => [...prevDurations, keyPressDuration]);\r\n        delete keyDownTimes.current[event.code];\r\n\r\n        if (event.key === 'Backspace' || event.key === 'Delete') {\r\n          setErrorCount((prev) => prev + 1); // Count as an error\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleFocusIn = (event) => {\r\n      const target = event.target;\r\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\r\n        target.addEventListener('keydown', handleKeyDown);\r\n        target.addEventListener('keyup', handleKeyUp);\r\n        lastFocusTimeRef.current = performance.now();\r\n      }\r\n    };\r\n\r\n    const handleFocusOut = (event) => {\r\n      const target = event.target;\r\n      if (lastFocusTimeRef.current) {\r\n        const dwellTime = performance.now() - lastFocusTimeRef.current;\r\n        setDwellTimes((prevTimes) => [...prevTimes, dwellTime]);\r\n        lastFocusTimeRef.current = null;\r\n      }\r\n      if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\r\n        target.removeEventListener('keydown', handleKeyDown);\r\n        target.removeEventListener('keyup', handleKeyUp);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    window.addEventListener('scroll', handleScroll);\r\n    document.addEventListener('focusin', handleFocusIn);\r\n    document.addEventListener('focusout', handleFocusOut);\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 5000);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      document.removeEventListener('focusin', handleFocusIn);\r\n      document.removeEventListener('focusout', handleFocusOut);\r\n      clearInterval(idleInterval);\r\n    };\r\n  }, [interactionData.avgCursorSpeed]);\r\n\r\n  const handleAadhaarChange = (e) => {\r\n    const value = e.target.value.replace(/\\s+/g, '');\r\n    if (/^\\d{0,12}$/.test(value)) {\r\n      setAadhaarNumber(value);\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage('Aadhaar number must be exactly 12 digits.');\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // Calculate session duration\r\n    const currentTime = performance.now();\r\n    const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\r\n\r\n    // Compute averages\r\n    const totalKeyPressDuration = keystrokeDurations.reduce((sum, dur) => sum + dur, 0);\r\n    const averageKeyPressDuration =\r\n      keystrokeDurations.length > 0 ? totalKeyPressDuration / keystrokeDurations.length : 0;\r\n\r\n    const typingSpeed =\r\n      sessionDuration > 0\r\n        ? ((keystrokeDurations.length / (sessionDuration / 60)).toFixed(2))\r\n        : 0; // chars per minute\r\n\r\n    const averageKeyTransitionTime =\r\n      keyTransitionTimes.length > 0\r\n        ? keyTransitionTimes.reduce((sum, time) => sum + time, 0) / keyTransitionTimes.length\r\n        : 0;\r\n\r\n    const keyTransitionStdDev = calculateStandardDeviation(keyTransitionTimes);\r\n\r\n    const averageDwellTime =\r\n      dwellTimes.length > 0\r\n        ? dwellTimes.reduce((sum, time) => sum + time, 0) / dwellTimes.length\r\n        : 0;\r\n\r\n    const errorRate =\r\n      keystrokeDurations.length > 0\r\n        ? ((errorCount / keystrokeDurations.length) * 100).toFixed(2)\r\n        : 0;\r\n\r\n    const formattedData = {\r\n      avgCursorSpeed: interactionData.avgCursorSpeed\r\n        ? interactionData.avgCursorSpeed.toFixed(2)\r\n        : 0,\r\n      cursorAcceleration: interactionData.cursorAcceleration\r\n        ? interactionData.cursorAcceleration.toFixed(2)\r\n        : 0,\r\n      pathDeviation: interactionData.pathDeviation\r\n        ? interactionData.pathDeviation.toFixed(2)\r\n        : 0,\r\n      idleTime: idleTime.toFixed(2),\r\n      jitter: interactionData.jitter ? interactionData.jitter.toFixed(2) : 0,\r\n      clickPattern: clickCount,\r\n      typingSpeed,\r\n      keyPressDuration: averageKeyPressDuration.toFixed(2),\r\n      keyTransitionTime: averageKeyTransitionTime.toFixed(2),\r\n      keyTransitionStdDev: keyTransitionStdDev.toFixed(2),\r\n      errorRate,\r\n      sessionDuration: sessionDuration.toFixed(2),\r\n      pageNavigationPattern: JSON.stringify(navigationEvents),\r\n      averageDwellTime: averageDwellTime.toFixed(2),\r\n      scrollBehavior: scrollDistance.toFixed(2),\r\n    };\r\n\r\n    downloadCSV(formattedData);\r\n\r\n    if (aadhaarNumber.length === 12) {\r\n      alert('Login successful!');\r\n    } else {\r\n      setErrorMessage('Please enter a valid 12-digit Aadhaar number.');\r\n    }\r\n  };\r\n\r\n  const downloadCSV = (data) => {\r\n    const headers = Object.keys(data).join(',');\r\n    const values = Object.values(data).join(',');\r\n\r\n    const csvContent = `${headers}\\n${values}`;\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'interaction_data.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"aadhaarNumber\">Aadhaar Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"aadhaarNumber\"\r\n          value={aadhaarNumber}\r\n          onChange={handleAadhaarChange}\r\n          placeholder=\"Enter your 12-digit Aadhaar number\"\r\n        />\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n      {showCaptcha && <Captcha />}\r\n      <button id=\"loginButton\" onClick={handleLogin} disabled={aadhaarNumber.length !== 12}>\r\n        Login\r\n      </button>\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}