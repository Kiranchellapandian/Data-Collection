{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\Portal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './components/styles.css';\nimport Captcha from './components/captcha';\nimport axios from 'axios';\n\n// Constants for normalization and threshold adjustments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\n\nconst Portal = () => {\n  _s();\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [interactionData, setInteractionData] = useState({\n    avgCursorSpeed: 0,\n    cursorAcceleration: 0,\n    pathDeviation: 0,\n    idleTime: 0,\n    jitter: 0,\n    clickPattern: 0,\n    typingSpeed: 0,\n    keyPressDuration: 0,\n    keyTransitionTime: 0,\n    errorRate: 0,\n    sessionDuration: 0,\n    averageDwellTime: 0,\n    scrollBehavior: 0\n  });\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [dwellTimes, setDwellTimes] = useState([]);\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\n  const keyDownTimes = useRef({});\n  const lastKeyDownTimeRef = useRef(null);\n  const [showCaptcha, setShowCaptcha] = useState(false);\n  const sessionStartRef = useRef(performance.now());\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\n  const lastCursorPositionRef = useRef({\n    x: null,\n    y: null,\n    time: null\n  });\n  const lastScrollPositionRef = useRef(window.scrollY);\n  const lastFocusTimeRef = useRef(null);\n\n  // Utility function to calculate standard deviation\n  const calculateStandardDeviation = values => {\n    const n = values.length;\n    if (n === 0) return 0;\n    const mean = values.reduce((a, b) => a + b, 0) / n;\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\n    return Math.sqrt(variance);\n  };\n  useEffect(() => {\n    let mouseMoveEvents = [];\n    const trackMouseMovement = event => {\n      const currentTime = performance.now();\n      const lastCursorPosition = lastCursorPositionRef.current;\n      if (lastCursorPosition.x !== null) {\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0 && timeElapsed < 5) {\n          let speed = distance / timeElapsed;\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\n\n          // Cap acceleration at a human threshold\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\n            acceleration = MAX_HUMAN_ACCELERATION;\n          }\n\n          // Collect mouse move events for advanced analysis\n          mouseMoveEvents.push({\n            speed,\n            acceleration,\n            time: currentTime\n          });\n\n          // Compute moving average of speed and acceleration\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\n          const avgSpeed = recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\n          const avgAcceleration = recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\n\n          // Calculate straight-line distance between last position and current position\n          const straightLineDistance = Math.sqrt((event.clientX - lastCursorPosition.x) ** 2 + (event.clientY - lastCursorPosition.y) ** 2);\n\n          // Calculate path deviation as the difference between actual distance and straight-line distance\n          const deviation = Math.abs(distance - straightLineDistance);\n\n          // Update jitter\n          const movement = Math.sqrt(dx * dx + dy * dy);\n          const isJitter = movement < 2; // Threshold can be adjusted\n\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: avgSpeed,\n            cursorAcceleration: avgAcceleration,\n            pathDeviation: prevData.pathDeviation > 0 ? (prevData.pathDeviation + deviation) / 2 : deviation,\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter\n          }));\n        }\n      }\n      lastCursorPositionRef.current = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTimeRef.current = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prev => prev + 1);\n      lastInteractionTimeRef.current = performance.now();\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\n      if (delta > 0) {\n        setScrollDistance(prev => prev + delta);\n        lastInteractionTimeRef.current = performance.now();\n      }\n      lastScrollPositionRef.current = newScrollPosition;\n    };\n    const calculateIdleTime = () => {\n      const currentTime = performance.now();\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\n      if (timeSinceLastInteraction > 1) {\n        setIdleTime(prev => prev + timeSinceLastInteraction);\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\n      }\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    window.addEventListener('scroll', handleScroll);\n    const idleInterval = setInterval(calculateIdleTime, 5000);\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      window.removeEventListener('scroll', handleScroll);\n      clearInterval(idleInterval);\n    };\n  }, [interactionData.avgCursorSpeed]);\n  const handleLogin = async () => {\n    // Calculate session duration\n    const currentTime = performance.now();\n    const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\n\n    const formattedData = {\n      userId: aadhaarNumber || 'anonymous-user',\n      avgCursorSpeed: interactionData.avgCursorSpeed ? interactionData.avgCursorSpeed.toFixed(2) : 0\n    };\n    console.log('Formatted Data (to be sent to backend):', formattedData); // Log formatted data\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/collect-data', formattedData); // Backend URL\n      console.log('Server Response:', response.data); // Log the server response\n    } catch (error) {\n      console.error('Error sending interaction data to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Portal UI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 10\n  }, this);\n};\n_s(Portal, \"vwf39QFZrO7eo5JEB/1equtQPYE=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Captcha","axios","jsxDEV","_jsxDEV","AVERAGE_DPI","DPI_NORMALIZATION_FACTOR","MAX_HUMAN_ACCELERATION","Portal","_s","aadhaarNumber","setAadhaarNumber","errorMessage","setErrorMessage","interactionData","setInteractionData","avgCursorSpeed","cursorAcceleration","pathDeviation","idleTime","jitter","clickPattern","typingSpeed","keyPressDuration","keyTransitionTime","errorRate","sessionDuration","averageDwellTime","scrollBehavior","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","setIdleTime","errorCount","setErrorCount","dwellTimes","setDwellTimes","keyTransitionTimes","setKeyTransitionTimes","keyDownTimes","lastKeyDownTimeRef","showCaptcha","setShowCaptcha","sessionStartRef","performance","now","lastInteractionTimeRef","current","lastCursorPositionRef","x","y","time","lastScrollPositionRef","window","scrollY","lastFocusTimeRef","calculateStandardDeviation","values","n","length","mean","reduce","a","b","variance","Math","sqrt","mouseMoveEvents","trackMouseMovement","event","currentTime","lastCursorPosition","dx","clientX","dy","clientY","distance","timeElapsed","speed","acceleration","push","recentMouseEvents","slice","avgSpeed","sum","e","avgAcceleration","straightLineDistance","deviation","abs","movement","isJitter","prevData","handleClick","prev","handleScroll","newScrollPosition","delta","calculateIdleTime","timeSinceLastInteraction","document","addEventListener","idleInterval","setInterval","removeEventListener","clearInterval","handleLogin","formattedData","userId","toFixed","console","log","response","post","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/Portal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './components/styles.css';\r\nimport Captcha from './components/captcha';\r\nimport axios from 'axios';\r\n\r\n// Constants for normalization and threshold adjustments\r\nconst AVERAGE_DPI = 1600; // Adjust based on common high-DPI mouse settings\r\nconst DPI_NORMALIZATION_FACTOR = AVERAGE_DPI / 800; // Normalize for high-DPI devices\r\nconst MAX_HUMAN_ACCELERATION = 50000; // Threshold for human-like acceleration\r\n\r\nconst Portal = () => {\r\n  const [aadhaarNumber, setAadhaarNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [interactionData, setInteractionData] = useState({\r\n    avgCursorSpeed: 0,\r\n    cursorAcceleration: 0,\r\n    pathDeviation: 0,\r\n    idleTime: 0,\r\n    jitter: 0,\r\n    clickPattern: 0,\r\n    typingSpeed: 0,\r\n    keyPressDuration: 0,\r\n    keyTransitionTime: 0,\r\n    errorRate: 0,\r\n    sessionDuration: 0,\r\n    averageDwellTime: 0,\r\n    scrollBehavior: 0,\r\n  });\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [errorCount, setErrorCount] = useState(0);\r\n  const [dwellTimes, setDwellTimes] = useState([]);\r\n  const [keyTransitionTimes, setKeyTransitionTimes] = useState([]);\r\n  const keyDownTimes = useRef({});\r\n  const lastKeyDownTimeRef = useRef(null);\r\n  const [showCaptcha, setShowCaptcha] = useState(false);\r\n  const sessionStartRef = useRef(performance.now());\r\n  const lastInteractionTimeRef = useRef(sessionStartRef.current);\r\n  const lastCursorPositionRef = useRef({ x: null, y: null, time: null });\r\n  const lastScrollPositionRef = useRef(window.scrollY);\r\n  const lastFocusTimeRef = useRef(null);\r\n\r\n  // Utility function to calculate standard deviation\r\n  const calculateStandardDeviation = (values) => {\r\n    const n = values.length;\r\n    if (n === 0) return 0;\r\n    const mean = values.reduce((a, b) => a + b, 0) / n;\r\n    const variance = values.reduce((a, b) => a + (b - mean) ** 2, 0) / n;\r\n    return Math.sqrt(variance);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mouseMoveEvents = [];\r\n\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = performance.now();\r\n      const lastCursorPosition = lastCursorPositionRef.current;\r\n\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = (event.clientX - lastCursorPosition.x) / DPI_NORMALIZATION_FACTOR;\r\n        const dy = (event.clientY - lastCursorPosition.y) / DPI_NORMALIZATION_FACTOR;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0 && timeElapsed < 5) {\r\n          let speed = distance / timeElapsed;\r\n          let acceleration = (speed - interactionData.avgCursorSpeed) / timeElapsed;\r\n\r\n          // Cap acceleration at a human threshold\r\n          if (acceleration > MAX_HUMAN_ACCELERATION) {\r\n            acceleration = MAX_HUMAN_ACCELERATION;\r\n          }\r\n\r\n          // Collect mouse move events for advanced analysis\r\n          mouseMoveEvents.push({\r\n            speed,\r\n            acceleration,\r\n            time: currentTime,\r\n          });\r\n\r\n          // Compute moving average of speed and acceleration\r\n          const recentMouseEvents = mouseMoveEvents.slice(-50); // last 50 events\r\n          const avgSpeed =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.speed, 0) / recentMouseEvents.length;\r\n          const avgAcceleration =\r\n            recentMouseEvents.reduce((sum, e) => sum + e.acceleration, 0) / recentMouseEvents.length;\r\n\r\n          // Calculate straight-line distance between last position and current position\r\n          const straightLineDistance = Math.sqrt(\r\n            (event.clientX - lastCursorPosition.x) ** 2 +\r\n              (event.clientY - lastCursorPosition.y) ** 2\r\n          );\r\n\r\n          // Calculate path deviation as the difference between actual distance and straight-line distance\r\n          const deviation = Math.abs(distance - straightLineDistance);\r\n\r\n          // Update jitter\r\n          const movement = Math.sqrt(dx * dx + dy * dy);\r\n          const isJitter = movement < 2; // Threshold can be adjusted\r\n\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: avgSpeed,\r\n            cursorAcceleration: avgAcceleration,\r\n            pathDeviation:\r\n              prevData.pathDeviation > 0\r\n                ? (prevData.pathDeviation + deviation) / 2\r\n                : deviation,\r\n            jitter: isJitter ? prevData.jitter + 1 : prevData.jitter,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPositionRef.current = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTimeRef.current = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prev) => prev + 1);\r\n      lastInteractionTimeRef.current = performance.now();\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      const delta = Math.abs(newScrollPosition - lastScrollPositionRef.current);\r\n      if (delta > 0) {\r\n        setScrollDistance((prev) => prev + delta);\r\n        lastInteractionTimeRef.current = performance.now();\r\n      }\r\n      lastScrollPositionRef.current = newScrollPosition;\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = performance.now();\r\n      const timeSinceLastInteraction = (currentTime - lastInteractionTimeRef.current) / 1000; // in seconds\r\n      if (timeSinceLastInteraction > 1) {\r\n        setIdleTime((prev) => prev + timeSinceLastInteraction);\r\n        lastInteractionTimeRef.current = currentTime; // Reset lastInteractionTime\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 5000);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      clearInterval(idleInterval);\r\n    };\r\n  }, [interactionData.avgCursorSpeed]);\r\n\r\n  const handleLogin = async () => {\r\n    // Calculate session duration\r\n    const currentTime = performance.now();\r\n    const sessionDuration = (currentTime - sessionStartRef.current) / 1000; // in seconds\r\n\r\n    const formattedData = {\r\n      userId: aadhaarNumber || 'anonymous-user',\r\n      avgCursorSpeed: interactionData.avgCursorSpeed\r\n        ? interactionData.avgCursorSpeed.toFixed(2)\r\n        : 0,\r\n    };\r\n\r\n    console.log('Formatted Data (to be sent to backend):', formattedData); // Log formatted data\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/collect-data', formattedData); // Backend URL\r\n      console.log('Server Response:', response.data); // Log the server response\r\n    } catch (error) {\r\n      console.error('Error sending interaction data to backend:', error);\r\n    }\r\n  };\r\n\r\n  return <div>Portal UI</div>;\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}