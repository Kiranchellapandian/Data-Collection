{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Desktop\\\\samplewebcollect\\\\webcollect\\\\src\\\\components\\\\Portal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport Captcha from './captcha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portal = () => {\n  _s();\n  const [interactionData, setInteractionData] = useState({});\n  const [clickCount, setClickCount] = useState(0);\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\n  const [scrollDistance, setScrollDistance] = useState(0);\n  const [idleTime, setIdleTime] = useState(0);\n  const [sessionStart] = useState(new Date().getTime());\n  let lastInteractionTime = sessionStart;\n  let lastCursorPosition = {\n    x: null,\n    y: null,\n    time: null\n  };\n  useEffect(() => {\n    const trackMouseMovement = event => {\n      const currentTime = new Date().getTime();\n      if (lastCursorPosition.x !== null) {\n        const dx = event.clientX - lastCursorPosition.x;\n        const dy = event.clientY - lastCursorPosition.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\n\n        if (timeElapsed > 0) {\n          setInteractionData(prevData => ({\n            ...prevData,\n            avgCursorSpeed: prevData.avgCursorSpeed ? (prevData.avgCursorSpeed + distance / timeElapsed) / 2 : distance / timeElapsed\n          }));\n        }\n      }\n      lastCursorPosition = {\n        x: event.clientX,\n        y: event.clientY,\n        time: currentTime\n      };\n      lastInteractionTime = currentTime;\n    };\n    const handleClick = () => {\n      setClickCount(prevCount => prevCount + 1);\n      lastInteractionTime = new Date().getTime();\n    };\n    const handleKeyPress = event => {\n      const currentTime = new Date().getTime();\n      if (keystrokeDurations.length > 0) {\n        const lastPressTime = keystrokeDurations[keystrokeDurations.length - 1].time;\n        const pressDuration = currentTime - lastPressTime;\n        setKeystrokeDurations(prevDurations => [...prevDurations, {\n          key: event.key,\n          time: currentTime,\n          duration: pressDuration\n        }]);\n      } else {\n        setKeystrokeDurations([{\n          key: event.key,\n          time: currentTime,\n          duration: 0\n        }]);\n      }\n      lastInteractionTime = currentTime;\n    };\n    const handleScroll = () => {\n      const newScrollPosition = window.scrollY;\n      setScrollDistance(prevDistance => prevDistance + Math.abs(newScrollPosition - lastCursorPosition.y));\n      lastInteractionTime = new Date().getTime();\n    };\n    const calculateIdleTime = () => {\n      const currentTime = new Date().getTime();\n      setIdleTime(prevIdleTime => prevIdleTime + (currentTime - lastInteractionTime) / 1000); // in seconds\n      lastInteractionTime = currentTime;\n    };\n    document.addEventListener('mousemove', trackMouseMovement);\n    document.addEventListener('click', handleClick);\n    document.addEventListener('keydown', handleKeyPress);\n    window.addEventListener('scroll', handleScroll);\n    const idleInterval = setInterval(calculateIdleTime, 1000);\n    window.addEventListener('beforeunload', () => {\n      setInteractionData(prevData => ({\n        ...prevData,\n        clickPattern: clickCount,\n        typingSpeed: keystrokeDurations.length / ((new Date().getTime() - sessionStart) / 60000),\n        // chars per minute\n        keyPressDuration: keystrokeDurations.length > 0 ? keystrokeDurations.reduce((acc, val) => acc + val.duration, 0) / keystrokeDurations.length : 0,\n        sessionDuration: (new Date().getTime() - sessionStart) / 1000,\n        // in seconds\n        scrollBehavior: scrollDistance,\n        idleTime\n      }));\n    });\n    return () => {\n      document.removeEventListener('mousemove', trackMouseMovement);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('keydown', handleKeyPress);\n      window.removeEventListener('scroll', handleScroll);\n      clearInterval(idleInterval);\n    };\n  }, [clickCount, keystrokeDurations, scrollDistance, idleTime, sessionStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Captcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note: This page collects data for research purposes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Portal, \"VTPYhEbxDBR31zazpsoBsDifFqA=\");\n_c = Portal;\nexport default Portal;\nvar _c;\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"names":["React","useState","useEffect","Captcha","jsxDEV","_jsxDEV","Portal","_s","interactionData","setInteractionData","clickCount","setClickCount","keystrokeDurations","setKeystrokeDurations","scrollDistance","setScrollDistance","idleTime","setIdleTime","sessionStart","Date","getTime","lastInteractionTime","lastCursorPosition","x","y","time","trackMouseMovement","event","currentTime","dx","clientX","dy","clientY","distance","Math","sqrt","timeElapsed","prevData","avgCursorSpeed","handleClick","prevCount","handleKeyPress","length","lastPressTime","pressDuration","prevDurations","key","duration","handleScroll","newScrollPosition","window","scrollY","prevDistance","abs","calculateIdleTime","prevIdleTime","document","addEventListener","idleInterval","setInterval","clickPattern","typingSpeed","keyPressDuration","reduce","acc","val","sessionDuration","scrollBehavior","removeEventListener","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Desktop/samplewebcollect/webcollect/src/components/Portal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css';\r\nimport Captcha from './captcha';\r\n\r\nconst Portal = () => {\r\n  const [interactionData, setInteractionData] = useState({});\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [keystrokeDurations, setKeystrokeDurations] = useState([]);\r\n  const [scrollDistance, setScrollDistance] = useState(0);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const [sessionStart] = useState(new Date().getTime());\r\n  let lastInteractionTime = sessionStart;\r\n  let lastCursorPosition = { x: null, y: null, time: null };\r\n\r\n  useEffect(() => {\r\n    const trackMouseMovement = (event) => {\r\n      const currentTime = new Date().getTime();\r\n      if (lastCursorPosition.x !== null) {\r\n        const dx = event.clientX - lastCursorPosition.x;\r\n        const dy = event.clientY - lastCursorPosition.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const timeElapsed = (currentTime - lastCursorPosition.time) / 1000; // in seconds\r\n\r\n        if (timeElapsed > 0) {\r\n          setInteractionData((prevData) => ({\r\n            ...prevData,\r\n            avgCursorSpeed: prevData.avgCursorSpeed\r\n              ? (prevData.avgCursorSpeed + (distance / timeElapsed)) / 2\r\n              : distance / timeElapsed,\r\n          }));\r\n        }\r\n      }\r\n      lastCursorPosition = { x: event.clientX, y: event.clientY, time: currentTime };\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleClick = () => {\r\n      setClickCount((prevCount) => prevCount + 1);\r\n      lastInteractionTime = new Date().getTime();\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n      const currentTime = new Date().getTime();\r\n      if (keystrokeDurations.length > 0) {\r\n        const lastPressTime = keystrokeDurations[keystrokeDurations.length - 1].time;\r\n        const pressDuration = currentTime - lastPressTime;\r\n        setKeystrokeDurations((prevDurations) => [...prevDurations, { key: event.key, time: currentTime, duration: pressDuration }]);\r\n      } else {\r\n        setKeystrokeDurations([{ key: event.key, time: currentTime, duration: 0 }]);\r\n      }\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    const handleScroll = () => {\r\n      const newScrollPosition = window.scrollY;\r\n      setScrollDistance((prevDistance) => prevDistance + Math.abs(newScrollPosition - lastCursorPosition.y));\r\n      lastInteractionTime = new Date().getTime();\r\n    };\r\n\r\n    const calculateIdleTime = () => {\r\n      const currentTime = new Date().getTime();\r\n      setIdleTime((prevIdleTime) => prevIdleTime + (currentTime - lastInteractionTime) / 1000); // in seconds\r\n      lastInteractionTime = currentTime;\r\n    };\r\n\r\n    document.addEventListener('mousemove', trackMouseMovement);\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    const idleInterval = setInterval(calculateIdleTime, 1000);\r\n\r\n    window.addEventListener('beforeunload', () => {\r\n      setInteractionData((prevData) => ({\r\n        ...prevData,\r\n        clickPattern: clickCount,\r\n        typingSpeed: keystrokeDurations.length / ((new Date().getTime() - sessionStart) / 60000), // chars per minute\r\n        keyPressDuration: keystrokeDurations.length > 0\r\n          ? keystrokeDurations.reduce((acc, val) => acc + val.duration, 0) / keystrokeDurations.length\r\n          : 0,\r\n        sessionDuration: (new Date().getTime() - sessionStart) / 1000, // in seconds\r\n        scrollBehavior: scrollDistance,\r\n        idleTime,\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', trackMouseMovement);\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n      window.removeEventListener('scroll', handleScroll);\r\n      clearInterval(idleInterval);\r\n    };\r\n  }, [clickCount, keystrokeDurations, scrollDistance, idleTime, sessionStart]);\r\n\r\n  return (\r\n    <div className=\"portal-container\">\r\n      <h2>Login Portal</h2>\r\n      {/* Add your input fields and Captcha components */}\r\n      <Captcha />\r\n      <footer>\r\n        <p>Note: This page collects data for research purposes.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}